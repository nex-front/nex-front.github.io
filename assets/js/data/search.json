[ { "title": "분양 템플릿 컴포넌트 가이드 (공통요소 및 레이아웃)", "url": "/posts/template-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/", "categories": "template, vue, guide", "tags": "template, guide, Example, vue, calendar, api, Tutorial", "date": "2023-04-17 00:00:00 +0900", "snippet": " gitHub의 쌍괄호 표시가 출력 되지 않아 { { } }로 가이드 작성함..meta, title등의 head 요소&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=&quot;ko&quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;사업지명&amp;lt;/title&amp;gt;&amp;lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot; /&amp;gt;&amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot;/&amp;gt;&amp;lt;meta name=&quot;description&quot; content=&quot;사업지명&quot;/&amp;gt;&amp;lt;meta name=&quot;keywords&quot; content=&quot;사업지명&quot;&amp;gt;&amp;lt;meta name=&quot;author&quot; content=&quot;사업지명&quot;&amp;gt;&amp;lt;meta property=&quot;og:type&quot; content=&quot;article&quot;&amp;gt;&amp;lt;meta property=&quot;og:title&quot; content=&quot;사업지명&quot;&amp;gt;&amp;lt;meta property=&quot;og:description&quot; content=&quot;사업지명&quot;&amp;gt;&amp;lt;meta property=&quot;og:image&quot; content=&quot;&quot;&amp;gt;&amp;lt;meta property=&quot;og:url&quot; content=&quot;&quot;&amp;gt;&amp;lt;link rel=&quot;shortcut icon&quot; href=&quot;&quot; type=&quot;image/x-icon&quot;&amp;gt;&amp;lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0, width=device-width&quot; /&amp;gt;javascript, css의 필수 리소스와 body 공통템플릿&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.14/vue.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/fullpage.js@2.9.7/dist/jquery.fullpage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.3.3/js/swiper.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;/resources/js/libs/SplitText.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://unpkg.com/aos@2.3.1/dist/aos.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/jquery.fullpage/2.9.4/jquery.fullpage.min.css&quot;&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.3.3/css/swiper.min.css&quot;&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/aos@2.3.1/dist/aos.css&quot;&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;/resources/js/app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;/resources/js/temp_app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;resources/css/temp_contents.css&quot;&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;div id=&quot;wrap&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; Header, Gnb영역 메뉴스킨 타입 지정시 header태그에 클래스명 temp_header_skin1을 넣어서 구분해준다. &amp;lt;header id=&quot;header&quot; class=&quot;temp_header_skin1&quot;&amp;gt; Vue 치환자설명 prjName : 사업지명 phoneNum : 전화번호 item.krName : 1depth 메뉴명 localNum1 : 현재페이지(pathname)와 Gnb가 매칭한 index번호 subItem.krName : 2depth의 메뉴명 menuClick(item.url, item.open, item.isBlank) item.url : 1depth 메뉴링크의 url menuClick(item.url, item.open, item.isBlank) item.open : 1depth 메뉴의 준비중여부 (true, false) menuClick(item.url, item.open, item.isBlank) item.isBlank : 1depth 링크의 새창여부 (true, false) menuClick(subItem.url, subItem.open, subItem.isBlank) subItem.url : 2depth 메뉴링크의 url menuClick(subItem.url, subItem.open, subItem.isBlank) subItem.open : 2depth 메뉴의 준비중여부 (true, false) menuClick(subItem.url, subItem.open, subItem.isBlank) subItem.isBlank :1depth 링크의 새창여부 (true, false)html소스&amp;lt;div id=&quot;vue_container&quot; style=&quot;visibility: hidden;&quot; v-bind:style=&quot;&#39;visibility: visible;&#39;&quot;&amp;gt; &amp;lt;header id=&quot;header&quot; class=&quot;temp_header_skin1&quot;&amp;gt; &amp;lt;div class=&quot;header_con&quot;&amp;gt; &amp;lt;h1&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; class=&quot;first_btn&quot;&amp;gt;{ { prjName } }&amp;lt;/a&amp;gt; &amp;lt;/h1&amp;gt; &amp;lt;nav class=&quot;gnb&quot;&amp;gt; &amp;lt;ul class=&quot;gnb_depth_1&quot;&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;item.url&quot; v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot; :class=&quot;{ current : localNum1 == i }&quot;&amp;gt;&amp;lt;strong&amp;gt;{ { item.krName } }&amp;lt;/strong&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;div class=&quot;gnb_depth_2&quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(subItem, j) in item.subDepth&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;subItem.url&quot; v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot;&amp;gt;{ { subItem.krName } }&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;div class=&quot;header_util&quot;&amp;gt; &amp;lt;span class=&quot;phone_num&quot;&amp;gt;&amp;lt;a :href=&quot;&#39;tel:&#39;+ phoneNum&quot; class=&quot;top_tel&quot;&amp;gt;{ { phoneNum } }&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;div class=&quot;util_menu&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; id=&quot;mGnbBtn&quot; class=&quot;btn&quot;&amp;gt;&amp;lt;div class=&quot;hamburger_icon&quot;&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div id=&quot;navbg&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;section class=&quot;allmenu_con&quot;&amp;gt; &amp;lt;nav class=&quot;mobile_gnb&quot; id=&quot;mobileGnb&quot;&amp;gt; &amp;lt;ul class=&quot;depth0&quot;&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; :class=&quot;[ isToggle(item) ? &#39;toggle&#39; : &#39;&#39; ]&quot; v-bind:data-href=&quot;item.url&quot;&amp;gt;&amp;lt;strong&amp;gt;{ { item.krName } }&amp;lt;/strong&amp;gt; &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;ul class=&quot;depth1&quot;&amp;gt; &amp;lt;li v-for=&quot;(subItem, j) in item.subDepth&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;subItem.url&quot; v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot;&amp;gt;{ { subItem.krName } }&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;!-- //header --&amp;gt;HTML 상단비쥬얼, 로케이션바 영역 &amp;lt;div class=&quot;sub_top_visual&quot;&amp;gt; &amp;lt;h2&amp;gt;&amp;lt;strong class=&quot;page_tit&quot; v-bind:id=&quot;&#39;subTitle&#39; + localNum1&quot;&amp;gt;{ { secondDeptTitle } }&amp;lt;/strong&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;span class=&quot;bkbg&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span v-bind:id=&quot;&#39;bgVisual_&#39; + localNum1&quot; class=&quot;sub_top_bg&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div id=&quot;page_location&quot; class=&quot;page_location_nav&quot;&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;span class=&quot;home&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;&amp;lt;i class=&quot;lnr lnr-home&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;dl class=&quot;path-item path_depth_1&quot;&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;span&amp;gt;{ { firstDeptTitle } }&amp;lt;/span&amp;gt;&amp;lt;button type=&quot;button&quot; class=&quot;btn-open&quot;&amp;gt;열기&amp;lt;/button&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;item.url&quot; v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot; :class=&quot;{ current : localNum1 == i }&quot;&amp;gt;{ {item.krName} }&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;btn-close&quot;&amp;gt;닫기&amp;lt;/button&amp;gt;&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;dl class=&quot;path-item path_depth_2&quot; v-if=&quot;localNum2 != undefined&quot;&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;span&amp;gt;{ { secondDeptTitle } }&amp;lt;/span&amp;gt;&amp;lt;button type=&quot;button&quot; class=&quot;btn-open&quot;&amp;gt;열기&amp;lt;/button&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(subItem, j) in secondDetpItem&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;subItem.url&quot; v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot;&amp;gt;{ {subItem.krName} }&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;btn-close&quot;&amp;gt;닫기&amp;lt;/button&amp;gt;&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;!-- //vue_container --&amp;gt; html 마크업 전체 소스 ( header_skin1 적용)See the Pen templete skin layout markup (temp_header_skin1) by yoonsc (@yoonsc) on CodePen.CSS (header.css) 사업지의 맞는 색상은 상단 :root 에서 수정한다.@import url(&quot;common.css&quot;);@import url(&quot;ui.css&quot;);@import url(&quot;form.css&quot;);/* variable********************/:root { /* gnb nav style */ --header_bg:rgba(0,0,0,.5); --header_bg_line:rgba(255,255,255,.1); --depth1_txt:rgba(255,255,255,1); --depth2_txt:rgba(255,255,255,1); --depth1_hover_txt:rgba(255,255,255,1); --depth2_hover_txt:rgba(255,255,255,1); --depth1_hover_bg:rgba(0,0,0,.5); --depth1_hover_round:0.3rem; --phone_txt:#fff; /* mobile nav style */ --mobile_menu_bg:#232429; --mobile_depth1_txt:#fff; --mobile_depth2_txt:#fff; --hamburger_color:#fff; /* location nav style */ --location_nav_bg:rgba(0,0,0, .5); --location_nav_menubg: rgba(73,73,73,.6); --location_nav_menuhover: rgba(73,73,73,.8); /* footer style */ --footer_bg:#283c82; --footer_txt:rgba(255,255,255,1); --footer_copy:rgba(255,255,255,0.7); --footer_comment:rgba(255,255,255,.5); --footer_link:rgba(255,255,255,.5); --footer_link_hover:rgba(255,255,255,1); --gotop_bg:rgba(40,60,130,1); --gotop_txt:rgba(255,255,255,1);}header.temp_header_skin1 { z-index: 69; width: 100%; position: absolute; left: 0; top: 0; right: 0; overflow: hidden; transition: 0.3s ease top; background: var(--header_bg);}header.temp_header_skin1.hover .header_con::before { content: &quot;&quot;; width: 100%; height: 1px; background: var(--header_bg_line); position: absolute; left: 0; right: 0; top: 113px;} CSS header.css 소스 ( header_skin1 적용)See the Pen templete skin layout css (temp_header_skin1) by yoonsc (@yoonsc) on CodePen.Json 데이타메뉴구성 (getMenu.json) header와 푸터의 정보를 담고 있는 json data 파일{ &quot;prjName&quot;: &quot;사업지명&quot;, &quot;s3URL&quot;:&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/&quot;, &quot;subTitle&quot;: &quot;새로운 중심, &amp;lt;strong&amp;gt;그이상의 특별함&amp;lt;/strong&amp;gt;, &amp;lt;strong&amp;gt;신문그리니티&amp;lt;/strong&amp;gt;&quot;, &quot;testURL&quot;:&quot;&quot;, &quot;realURL&quot;:&quot;&quot;, &quot;phoneNum&quot;: &quot;전화번호&quot;, &quot;gnbList&quot;: [ {&quot;krName&quot;: &quot;사업개요&quot;, &quot;url&quot;: &quot;/overview.html&quot;, &quot;open&quot;:true, &quot;subDepth&quot;: [ {&quot;krName&quot;: &quot;사업개요&quot;, &quot;url&quot;: &quot;/overview.html&quot;, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;입지환경&quot;, &quot;url&quot;: &quot;/environment.html&quot;, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;프리미엄&quot;, &quot;url&quot;: &quot;/premium.html&quot;, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;오시는길&quot;, &quot;url&quot;: &quot;/location.html&quot;, &quot;open&quot;:true} ]}, {&quot;krName&quot;: &quot;관심고객등록&quot;, &quot;url&quot;: &quot;/regist.html&quot;, &quot;open&quot;:true} ], &quot;footerContent&quot;:{ &quot;copyright&quot;:&quot;COPYRIGHT © POSCO ENC. ALL RIGHTS RESERVED.&quot;, &quot;footer_links&quot;:[ {&quot;name&quot;:&quot;이용약관&quot;, &quot;url&quot;:&quot;https://thesharp.co.kr/mythe/rules.aspx&quot;, &quot;blank&quot;:true}, {&quot;name&quot;:&quot;개인정보처리방침&quot;, &quot;url&quot;:&quot;https://thesharp.co.kr/mythe/privacy.aspx&quot;, &quot;blank&quot;:true} ], &quot;footer_info1&quot;:[ {&quot;name&quot;:&quot;위탁&quot;, &quot;memo&quot;:&quot;(주)성안디엠피&quot;}, {&quot;name&quot;:&quot;시행&quot;, &quot;memo&quot;:&quot;한국투자신탁&quot;}, {&quot;name&quot;:&quot;시공&quot;, &quot;memo&quot;:&quot;포스코이엔씨&quot;} ], &quot;footer_info2&quot;:[ {&quot;name&quot;:&quot;주소&quot;, &quot;memo&quot;:&quot;서울특별시 중구 퇴계로 173 남산스퀘어 (우)04554&quot;}, {&quot;name&quot;:&quot;대표번호&quot;, &quot;memo&quot;:&quot;02-6910-7100&quot;}, {&quot;name&quot;:&quot;사업자번호&quot;, &quot;memo&quot;:&quot;120-86-03362&quot;} ], &quot;footer_comment&quot;:[ &quot;본 홈페이지상의 CG 및 이미지 등은 소비자의 이해를 돕기 위해 주변 시설 및 건축물 등을 계략적으로 표현한 것으로 실제와 다를 수 있습니다&quot;, &quot;본 홈페이지상의 내용과 이미지는 실제와 다를 수 있으며 인 · 허가 및 설계 과정에서 변경될 수 있습니다&quot; ] }}JavascriptHeader Skin 1 CSS header.css 소스 ( tempHeader_skin1 적용)// tempHeader_skin1APP.register( &#39;tempHeader_skin1&#39; );APP.tempHeader_skin1 = ( function() { var _isInitialized; var _vue; var Data = APP.GnbListData; ... ... ... return { init: init, getParam: getParam }} )(); tempHeader_skin1 적용 함수 &amp;lt;script type=&quot;text/javascript&quot;&amp;gt; $(function () { APP.tempHeader_skin1.init(); }); &amp;lt;/script&amp;gt; temp_app.js (tempHeader_skin1 적용)See the Pen templete skin layout markup (temp_header_skin1) by yoonsc (@yoonsc) on CodePen." }, { "title": "캘린더 프론트 개발", "url": "/posts/template-%EC%BA%98%EB%A6%B0%EB%8D%94/", "categories": "template, vue, Tutorial", "tags": "template, Example, vue, calendar, api, Tutorial", "date": "2023-03-15 00:00:00 +0900", "snippet": "Calendar template API Guide소개 분양사업지용 공통 사용이 가능한 캘린더 템플릿 스킨 제작. 이미지기반이 아닌 text기반의 json 데이터로 작성 및 관리하여 업무의 효율성을 높이고자 한다. static데이터를 vue.js 를 이용하여 구현 하였다. 기존 사업지의 여러 형태의 이미지기반 캘린더 샘플을 참고함.새로 구현한 텍스트기반 캘린더 템플릿 [샘플] 캘린더 샘플 html 사용시 참고사항HTML 소스 설명 &amp;lt;div class=&quot;carendar_tbl&quot;&amp;gt; &amp;lt;ul class=&quot;week&quot;&amp;gt; &amp;lt;li v-for=&quot;str in week&quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;ul class=&quot;carendar_data_list&quot;&amp;gt; &amp;lt;li v-for=&quot;( item, i ) in list&quot; :key=&quot;i&quot; :class=&quot;{ on_schedule : item.event == true }&quot;&amp;gt; &amp;lt;span class=&quot;day&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;month&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;div class=&quot;schedule-area&quot; v-if=&quot;item.eventData&quot;&amp;gt; &amp;lt;span class=&quot;schedule-item&quot; :class=&quot;[ subItem.label, subItem.during, onStart(subItem) ? &#39;start&#39; : &#39;&#39;, onEnd(subItem) ? &#39;end&#39; : &#39;&#39; ]&quot; v-for=&quot;(subItem, j) in item.eventData&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;span class=&quot;txt&quot; v-html=&quot;subItem.eventText&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt;JSON 데이터 설명 (getCalendar.json) &quot;schedule&quot;: [ {&quot;calday&quot;: &quot;01/29&quot;, &quot;month&quot;:&quot;1월&quot;}, {&quot;calday&quot;: &quot;01/30&quot;, &quot;event&quot;:false}, {&quot;calday&quot;: &quot;01/31&quot;, &quot;event&quot;:false}, {&quot;calday&quot;: &quot;02/01&quot;, &quot;month&quot;:&quot;2월&quot;, &quot;event&quot;:false}, {&quot;calday&quot;: &quot;02/02&quot;, &quot;event&quot;:false}, {&quot;calday&quot;: &quot;02/02&quot;, &quot;event&quot;:true, &quot;eventData&quot;:[{ &quot;eventText&quot;:&quot;GRAND OPEN&quot;, &quot;label&quot;:&quot;red&quot;, &quot;during&quot;:&quot;day1&quot;, &quot;onSrart&quot;:false, &quot;onEnd&quot;:false }]}, {&quot;calday&quot;: &quot;03/04&quot;, &quot;event&quot;:true, &quot;eventData&quot;:[{ &quot;eventText&quot;:&quot;서류접수&quot;, &quot;label&quot;:&quot;grey&quot;, &quot;during&quot;:&quot;day2&quot;, &quot;onSrart&quot;:false, &quot;onEnd&quot;:true }]}, getCalendar.json object들의 key : calday : 날짜 month : 월구분을 위해 해당 월을 표시하고자 할때 event : true, false 해당일 이벤트 유무 eventText : 이벤트내용 label : 이벤트 박스 색상클래스 지정 during : day1, day2, day3, day4, day5, day6, day7 - 한주를 기준으로 1~7 day까지 지정 onSrart : 이벤트 시작 지점의 라운드 처리 유무 (기간 표시일 경우에만 사용 ex)접수기간, 정당계약등 ) onEnd : 이벤트 끝 지점의 라운드 처리 유무 (기간 표시일 경우에만 사용 ex)접수기간, 정당계약등 ) javascript 설명 var _initVue = function() { _vue = new Vue( { el: &#39;#vue-carendar&#39;, data: { week: [ &#39;월&#39;, &#39;화&#39;, &#39;수&#39;, &#39;목&#39;, &#39;금&#39;, &#39;토&#39;, &#39;일&#39; ], mode: &#39;calendar&#39;, //list list: {} }, methods: { onStart: function(item){ if (item.onSrart) { return true; } }, onEnd: function(item){ if (item.onEnd) { return true; } } } } ); _buildCalendar(); }; " }, { "title": "웹폰트 사용가이드", "url": "/posts/webfont/", "categories": "webfont, Tutorial", "tags": "webfont, Tutorial, Example", "date": "2023-02-01 00:00:00 +0900", "snippet": "웹폰트(webfont) 사용에 대하여소개 웹폰트에 대한 사용이 높아짐에 따라 웹폰트 로딩을 빠르게 하는 방법을 알아보고 가이드를 작성함. 셀프 호스팅 (CDN) 에 대한 방법과 예제를 소개하여 디자인의도에 맞게 제작에 대한 효율성을 높이기 위함.웹폰트 사용가이드1. font-display 지시자 사용 font-display에 적용할 수 있는 다섯가지 값이 있다. 브라우저 default 값은 auto 이며 swap으로 적용한다. swap이란 이름에서 느껴지는 것처럼, 웹폰트가 로딩되기 전까지 fallback 폰트로 글자를 보여주는 것이다. (FOUT) 폰트 다운로드가 끝나자마자 폰트 스왑이 일어나게 된다. 폰트가 로딩되지 않더라도 사용자들이 글자를 읽을 수 있기 때문에 좋다고 볼 수 있다. 그러나 fallback font를 웹폰트와 비슷한 것으로 설정 하지 않는다면, 화면전환이 크게 일어날 수 있으므로 조심해야 한다./* Keyword values */font-display: auto;font-display: block;font-display: swap;font-display: fallback;font-display: optional; 참고) 웹폰트를 로딩시 아래의 두가지 현상이 있다. Flash of Invisible Text (FOIT): 브라우저가 폰트를 다운로드 하기전에 폰트가 보이지 않는 현상이다. Flash of Unstyled Text (FOUT): 브라우저가 폰트를 다운로드하기전에 폰트가 적용되지 않은 글자가 보이는 현상이다. 참고 : https://developer.mozilla.org/ko/docs/Web/CSS/@font-face/font-display2. 모던 파일 포멧의 사용 IE8 지원을 할 것이 아니라면, WOFF2나 WOF 보다 더 오래된 폰트 형식을 사용할 필요가 없다. IE 11 지원을 배제한다면, WOFF2만 사용 하면 된다.@font-face { font-family: &#39;Typefesse&#39;; src: url(&#39;typefesse.woff2&#39;) format(&#39;woff2&#39;), url(&#39;typefesse.woff&#39;) format(&#39;woff&#39;);}3. 폰트 셀프 호스팅(CDN 이용)3.1 Google font Google fonthttps://fonts.google.com/ 순전히 편리함 때문에 구글 폰트를 사용하고 있다면, https://gwfh.mranftl.com/ 를 한번 방문해보는 것도 좋다. 이 도구를 사용하면 전체 구글 폰트 집합에서 커스텀 웹 폰트 번들을 만들고, 필요한 두께나 문자 집합을 정의한다음, 모든 css 및 폰트 파일을 포함하는 다운로드를 만들 수 있다. https://gwfh.mranftl.com@import url(&#39;https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&amp;amp;display=swap&#39;);@import url(&#39;https://fonts.googleapis.com/css2?family=Roboto:wght@300;500;700;900&amp;amp;display=swap&#39;);@import url(&#39;https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800&amp;amp;display=swap&#39;);3.2 Adobe font Adobe fonthttps://fonts.adobe.com/ 웹프로젝트에 적용 : https://fonts.adobe.com/my_fonts#web_projects-section 폰트관리 참조문서: https://helpx.adobe.com/kr/fonts/using/dynamic-subsetting.htmlSee the Pen adobe webfont test by yoonsc (@yoonsc) on CodePen. css의 @import로 웹폰트를 로드 시키거나, head 내 스크립트 사용한다. 아래는 스크립트를 이용한 국문 본고딕의 예시이다. (function(d) { var config = { kitId: &#39;bak0cip&#39;, scriptTimeout: 3000, async: true }, h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\\bwf-loading\\b/g,&quot;&quot;)+&quot; wf-inactive&quot;;},config.scriptTimeout),tk=d.createElement(&quot;script&quot;),f=false,s=d.getElementsByTagName(&quot;script&quot;)[0],a;h.className+=&quot; wf-loading&quot;;tk.src=&#39;https://use.typekit.net/&#39;+config.kitId+&#39;.js&#39;;tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&amp;amp;&amp;amp;a!=&quot;complete&quot;&amp;amp;&amp;amp;a!=&quot;loaded&quot;)return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s) })(document);" }, { "title": "POSTMAN 사용법", "url": "/posts/postman/", "categories": "api, manual", "tags": "api, postman, Tutorial, manual", "date": "2023-01-19 00:00:00 +0900", "snippet": "POSTMAN 가입 및 설치1. 소개 POSTMAN은 API를 개발, 테스트, 공유 및 문서화하는 데 사용되는 API 클라이언트 이다. 엔드 포인트 URL을 입력하는 테스트에 사용되며 서버로 요청을 보내고 서버에서 응답을 받아 api가 잘 동작하는지 확인할 수 있다. 편리하게 쿼리스트링을 보낼 수 있고, 브라우저 도구에서는 하지못하는 Authorization이나 Header, Body 값 수정 헤더값 수정 등 도구를 제공한다. 2. 가입 및 설치 포스트맨 설치 페이지이동 윈도우 64비트 버전 버튼을 눌러 설치를 진행하면 된다.3. 포스트맨 테마 변경 File &amp;gt; setting 메뉴에서 themes 탭으로 이동하면 다크모드로 이용이 가능하다.4. 포스트맨 요청 테스트 json 테스트제공 간단하게 HTTP request와 response의 동작을 확인할 수 있도록 테스트 서비스를 제공하는 사이트5. 포스트맨 사용법5-1. Workspances 생성[ Workspances 용도 ] Workspances는 포스트맨의 모든 기능을 담고 있는 뷰라고 보면 된다. 프로젝트 용도에 따라 Personal workspace와 Team workspace로 구분된다. workspace의 단위는 목적에 따라 자유롭게 지정할 수 있다.예를들어 QA는 테스트 작성을 위한 workspace를 가지고, 기술자는 API를 문서화하기 위한 workspace를 가지는 식으로 분업이 가능하다. 제품이나 프로젝트별로 구성하게 되면 해당 서비스와 관련된 모든 것들이 해당 workspace 내에 있으므로, 해당 제품에 대한 작업을 시작했을 때 맞춤 view를 볼 수 있다. 외부 파트너나 고객과 통합하여 구축하는 경우 권한을 제어하여 workspace에 참여할 수 있도록 할수 있다.5-2. Colleciton 생성[ Collection 용도 ] Collection은 request를 그룹화한 단위이다. 모든 HTTP 요청은 Collection에 포함되어 있다. Collection에 속한 모든 요청에 대해 통합 테스트를 실행할 수 있다. ** 여러 request를 모아서 관리하고 공유함으로써 API 사용 설명서 역할 ** 을 하는 것이라 이해하면 된다. HTTP Request : 간단하게 요청 하나 테스트할때 이용 Collection : 요청들을 체계적으로 그룹하여 관리할때 이용 5-3. folder 생성 폴더별로 구분하여 체계적으로 관리가능5-4. Request 생성5-5. GET 요청 보내기 JSON 테스트를 할수 있는 사이트에서 https://jsonplaceholder.typicode.com/posts 로 GET요청을 해보자. 이번엔 쿼리 파라미터에 값을 넣어, 유저 아이디가 10인 사용자가 쓴 게시글만 조회해보자.5-6. POST 요청 보내기 게시글들을 가져오는 것 뿐만 아니라, 게시글을 작성하고 발행하는 api도 테스트해야 하는 경우가 있다.POST 요청 해야 할 경우, 다음과 같다.fetch(&#39;https://jsonplaceholder.typicode.com/posts&#39;, { method: &#39;POST&#39;, body: JSON.stringify({ title: &#39;테스트 게시물&#39;, body: &#39;안녕하세요 테스트 내용입니다&#39;, userId: 1, }), headers: { &#39;Content-type&#39;: &#39;application/json; charset=UTF-8&#39;, },}) .then((response) =&amp;gt; response.json()) .then((json) =&amp;gt; console.log(json)); 완료 되었으면 저장을 해서 요청결과를 관리한다.5-7. 응답성능 지표 보기 응답 크기 및 응답 시간과 같은 응답 매개 변수에 대한 세부 정보를 얻으려면 각 값 위로 마우스를 가져 가기 만하면 Postman이 각 속성에 대한 세부 정보가 포함 된 세부보기를 표시해준다. 예를 들면 아래와 같이 요청 시간에 대해-연결 시간, 소켓 시간, DNS 조회, 핸드 셰이크 등과 같은 개별 구성 요소로 추가 분석이 가능하다. 5-8. 전체 테스트 실행 만일 request 리스트들이 엄청 많을 경우, 이들을 하나하나씩 눌러 테스트 할 필요없이 Collection에 등록된 모든 request를 폴더별로 실행이 가능하다.결과샘플 반복횟수와 주기횟수를 설정하여 API성능이나 제한 테스트를 해볼 수 있다. (1초마다 5번실행 예시)6. 포스트맨 인증키 설정 api key값을 요청해야 하는 경우 header에 key값을 넣어서 요청한다.– 그외 부가기능들 –7. 테스트주기 자동화 기능8. 코드 스니펫" }, { "title": "youtube background 라이브러리 가이드", "url": "/posts/ytplayer/", "categories": "youtube, api, Tutorial", "tags": "youtube, video, Example, api, Tutorial", "date": "2022-10-02 00:00:00 +0900", "snippet": "youTube 동영상 컨트롤 (jquery.mb.YTPlayer)소개 유튜브 동영상을 메인 페이지에 삽입하여 background처리에 편리하게 사용이 가능한 라이브러리. 유튜브 api의 여러가지 매개변수를 쉽게 이용이 가능함. 필수 로드 파일들 (CDN)&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery.mb.YTPlayer/3.3.1/jquery.mb.YTPlayer.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery.mb.YTPlayer/3.3.1/css/jquery.mb.YTPlayer.min.css&quot;&amp;gt;사용법 기본 스크립트 로드 jQuery(function(){ jQuery(&quot;#[playerID]&quot;).YTPlayer(); }); &amp;lt;div id=&quot;bgndVideo&quot; class=&quot;player&quot; data-property=&quot;{ videoURL:&#39;http://youtu.be/BsekcY04xvQ&#39;, containment:&#39;body&#39;, autoPlay:true, mute:true, startAt:0, opacity:1 }&quot;&amp;gt;My video&amp;lt;/div&amp;gt;data-property 옵션들 mute: true (boolean) or false showControls: true (boolean) or false useOnMobile: true (boolean) or false ratio: 4/3, 16/9 or auto (string) autoPlay: true (boolean) or false loop: false (boolean) or a number containment: (string) css선택자로 요소를 지정하거나 &quot;body&quot;, &quot;self&quot; 기본값은 &quot;background&quot;함수리스트 함수 이벤트 샘플 //play &amp;lt;button onclick=&quot;$(&#39;#[playerID]&#39;).YTPPlay()&quot;&amp;gt;play&amp;lt;/button&amp;gt; YTPChangeMovie(opt)이 메서드를 사용하면 지정된 플레이어의 비디오를 변경하고자 할때 사용함.비디오에 필요한 모든 데이터 속성(위 참조)을 포함하는 매개변수로 Object를 허용함. 필수값은 videoURL 매개변수. 예시:&amp;lt;button onclick=&quot;jQuery(&#39;#[playerID]&#39;).YTPChangeMovie({videoURL:&#39;http://youtu.be/3ovA7zeviRo&#39;,ratio:&#39;4/3&#39;})&quot;&amp;gt;영상변경&amp;lt;/button&amp;gt; YTPPlay() : play YTPPause() : pause YTPStop() : stop YTPSeekTo(20) : seek to 20 sec. YTPGetPlaybackRate() : Get playback rate YTPSetPlaybackRate(0.25) : Set playback rate YTPFullscreen() : bring to front / send to back YTPSetVolume(20) : change volume YTPMute() : mute YTPUnmute() : unmute YTPToggleVolume() : unmute/unmute YTPGetPlayer().getPlayerState()) : get state YTPGetVideoData() : video info YTPPlayNext() : play next YTPPlayPrev() : play previous YTPPlayIndex(2) : play the second video in the list YTPGetTime() : Get time YTPGetTotalTime() : Get total time 함수 샘플 참고 함수들 샘플 새창 샘플구현See the Pen youtube background control by yoonsc (@yoonsc) on CodePen.playlist로 멀티 동영상을 컨트롤하고자 할때let videos = [ {videoURL:&quot;VuaJAgx0x_4&quot;,containment:&#39;body&#39;,autoPlay:true, mute:false, startAt:0,opacity:1, loop:false, ratio:&quot;4/3&quot;, addRaster:true}, {videoURL: &quot;3ovA7zeviRo&quot;,containment:&#39;body&#39;,autoPlay:true, mute:true, startAt:0,opacity:1, loop:false, ratio:&quot;4/3&quot;, addRaster:false}, {videoURL: &quot;u9k1FaMIYTs&quot;,containment:&#39;body&#39;,autoPlay:true, mute:false, startAt:0,opacity:1, loop:false, ratio:&quot;4/3&quot;, addRaster:true}];$(&quot;#myPlayerID&quot;).YTPlaylist(videos, false, function(video){ $(&quot;#videoID&quot;).html(video.videoData.id); $(&quot;#videoTitle&quot;).html(video.videoData.title); $(&quot;#videoDesc&quot;).html(video.videoData.description);}); 다중동영상 컨트롤 예제 유튜브 다중 컨트롤 새창 " }, { "title": "Vimeo api가이드 및 멀티동영상 구현", "url": "/posts/vimeo/", "categories": "vimeo, api, Tutorial", "tags": "vimeo, video, Example, api, Tutorial", "date": "2022-10-01 00:00:00 +0900", "snippet": "Vimeo 동영상 컨트롤 Guide소개 Vimeo 동영상을 삽입하여 컨트롤하고자 할때 필요한 정보를 정리함. 멀티 동영상제어: 한페이지내 다중 동영상을 노출 할 경우 선택된 동영상만 재생하고 다른 동영상들은 재생을 정지 시킬때 사용 Player-parameters 많이 사용되는 매개변수들 https://player.vimeo.com/video/754592109?badge=0&amp;amp;amp;autopause=0&amp;amp;amp;app_id=754592109 (동영상 iframe의 embed 예시) autopause=0 or 1 또는 true or false : 같은 페이지의 다른 Vimeo 비디오가 재생되기 시작할 때 현재 비디오를 일시 중지할지 여부. false or 0일 경우엔 페이지의 모든 비디오를 동시에 재생 (이 옵션은 브라우저 설정이나 확장 프로그램 또는 플러그인을 통해 브라우저에서 쿠키를 비활성화한 경우 효과가 없음.) autoplay=0 or 1 또는 true or false : 비디오 자동재생 여부 background=0 or 1 또는 true or false : 1. 모든 플레이의 컨트롤 요소가 사라짐.(재생버튼 포함) 2. 동영상이 자동으로 반복, 3. 동영상 자동재생으로 설정됨, 4. 동영상이 음소거 설정됨. playsinline=0 or 1 또는 true or false : 모바일에서 자동으로 전체화면으로 전환되는걸 금지하고 영역내에서 인라인으로 재생시킵니다. (true가 디폴트) quality=auto : 240p, 360p, 540p, 720p, 1080p, 2k, 4k : 비디오 로드될때의 퀄리티는 디폴트로 auto 로 되어있으며 커스텀 퀄리티를 지정할수 있습니다.(모바일/ 태블릿에서는 지원하지 않음) app_id=754592109 : 동영상의 아이디지정 api 레퍼런스 참고: https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Player-parameters-overviewVimeo api script (cdn)&amp;lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&amp;gt;&amp;lt;/script&amp;gt;Vimeo 멀티동영상 컨트롤 예시 호출할 버튼의 html&amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a class=&quot;movie_btn&quot; href=&quot;javascript:;&quot; data-video-start=&quot;1&quot; data-target-id=&quot;tv_load_0&quot;&amp;gt;동영상1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a class=&quot;movie_btn&quot; href=&quot;javascript:;&quot; data-video-start=&quot;1&quot; data-target-id=&quot;tv_load_1&quot;&amp;gt;동영상2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a class=&quot;movie_btn&quot; href=&quot;javascript:;&quot; data-video-start=&quot;1&quot; data-target-id=&quot;tv_load_2&quot;&amp;gt;동영상3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a class=&quot;movie_btn&quot; href=&quot;javascript:;&quot; data-video-start=&quot;1&quot; data-target-id=&quot;tv_load_3&quot;&amp;gt;동영상4&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt; 동영상 노출 컨텐츠영역의 html&amp;lt;div class=&quot;movie_con_wrap&quot;&amp;gt; &amp;lt;div class=&quot;movie_con&quot; id=&quot;tv_load_0&quot;&amp;gt; &amp;lt;iframe class=&quot;embed-player&quot; src=&quot;https://player.vimeo.com/video/754592109?badge=0&amp;amp;amp;autopause=0&amp;amp;amp;player_id=0&amp;amp;amp;app_id=754592109&quot; width=&quot;100%&quot; height=&quot;620&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;movie_con&quot; id=&quot;tv_load_1&quot;&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;movie_con&quot; id=&quot;tv_load_2&quot;&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;movie_con&quot; id=&quot;tv_load_3&quot;&amp;gt;...&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt; 스크립트 액션 var videos = [ new Vimeo.Player($(&#39;#tv_load_0&#39;).find(&quot;iframe&quot;)), new Vimeo.Player($(&#39;#tv_load_1&#39;).find(&quot;iframe&quot;)), new Vimeo.Player($(&#39;#tv_load_2&#39;).find(&quot;iframe&quot;)), new Vimeo.Player($(&#39;#tv_load_3&#39;).find(&quot;iframe&quot;))];$(&quot;.movie_btn&quot;).click(function(e){ e.preventDefault(); var videoId = $(this).attr(&quot;data-target-id&quot;); var tNum = videoId.slice(-1); videos[tNum].on(&#39;play&#39;, function() { $(&quot;.movie_btn[data-target-id!=&quot;+videoId+&quot;]&quot;).removeClass(&quot;on&quot;); $(&quot;.movie_btn[data-target-id=&quot;+videoId+&quot;]&quot;).addClass(&quot;on&quot;); }); for (var i=0, ii=videos.length; i&amp;lt;ii; i++) { if(tNum != i) { videos[i].pause(); } } videos[tNum].play();}); " }, { "title": "입지환경 Map API 개발", "url": "/posts/mapAPI/", "categories": "api, map, Tutorial", "tags": "map, navermap, Example, api, Tutorial", "date": "2022-08-30 00:00:00 +0900", "snippet": "Naver Map API Guide소개 Naver map api기반으로 입지환경 UI/UX 개발구현 샘플 테스트 html ver1.0테스트 HTML ver1.0 사업지적용 샘플군산 프리미엘 샘플API 계정 정보naver API console https://console.ncloud.com/naver-service/application 계정명 : ncpClientId=고유키값 &amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=nuofqbbztp&amp;amp;submodules=geocoder&quot;&amp;gt;&amp;lt;/script&amp;gt;데이터 참고위도 경도 확인 페이지 위도 경도 검색입지환경 데이터 시트 구글드라이브 데이터시트 naver map api 스크립트&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=nuofqbbztp&amp;amp;submodules=geocoder&quot;&amp;gt;&amp;lt;/script&amp;gt;구조 설명 &amp;lt;div class=&quot;map_wrap&quot;&amp;gt; &amp;lt;div class=&quot;ui_tabcontents&quot;&amp;gt; &amp;lt;ul class=&quot;tab mapsort&quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; data-sort-tatget=&quot;0&quot; class=&quot;on&quot;&amp;gt;전체&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; data-sort-tatget=&quot;1&quot;&amp;gt;생활&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; data-sort-tatget=&quot;2&quot;&amp;gt;자연&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; data-sort-tatget=&quot;3&quot;&amp;gt;학교&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;javascript:;&quot; data-sort-tatget=&quot;4&quot;&amp;gt;교통&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;iframe_area&quot;&amp;gt; &amp;lt;iframe src=&quot;map/insert_map0.html&quot; width=&quot;1100&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&amp;gt;&amp;lt;/iframe&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; insert_map0, insert_map1, insert_map2, insert_map3….. 파일순으로 iframe 호출하여 iframe 영역에 로드합니다. $(function(){ $(&quot;.mapsort&quot;).find(&quot;a&quot;).click(function(e){ $(&quot;.mapsort a&quot;).removeClass(&quot;on&quot;); $(this).addClass(&quot;on&quot;); e.preventDefault(); var target = $(this).attr(&#39;data-sort-tatget&#39;); if(target) { var mapFrame = &#39;&amp;lt;iframe width=&quot;1100&quot; height=&quot;600&quot; src=&quot;map/insert_map&#39;+ target +&#39;.html&quot; frameborder=&quot;0&quot;&amp;gt;&amp;lt;/iframe&amp;gt;&#39;; $(&quot;.iframe_area&quot;).html(mapFrame); } }); });사용시 참고사항 dataIdx : 카테고리 number를 지정합니다. (전체:0, 생활:1, 자연:2, 환경:3, 아무개:4…..) mapZoom : iframe이 로드되고 naver map이 init 되었을때 디폴트 확대 zoom level 으로 지정합니다. 맵사이즈를 조정할때는 &amp;lt;iframe width=&quot;1100&quot;&amp;gt; 사이즈를 변경하고, 함수명 initMap()의 ` size : new naver.maps.Size(1100, 600),` 를 변경합니다. var dataIdx = &quot;&quot;; //카테고리 page Number var mapZoom = 14; //지도확대 .... //맵로드 function initMap() size : new naver.maps.Size(1100, 600), ...파일구조 img, js, css, data폴더는 절대경로 /share/에 배치시켜 모바일에서도 데이터를 가져다 사용할수 있도록 하며 iframe 관련 html img : /eco/, /edu/, /traffic/ 처럼 카테고리를 지정하여 폴더로 구분합니다. 파일 네임은 직관적이고 편리하게 01, 02 ... 와 같이 넘버링합니다. js : 스크롤관련 라이브러리만 독립적으로 불러와 사용합니다. css : map.css 만 iframe방식으로 데이터를 로드하기 때문에 따로 불러와서 스타일을 로드합니다. 데이터 작성 getMapData.json (현장, 모델하우스..등 디폴트 위치 정보) getPlaceInfo.json (환경 각각의 위처정보 객체들을 담고 있는 데이타)주변시설 데이타 getMapData.json 전체 : getMapData.json, 카테고리1 : getMapData1.json, 카테고리2 : getMapData2.json …. object들의 key : pointName : 타이틀 pointDept : 카테고리 pointAddr : 주소 pointText : 설명 pointDist : 현장과의 거리 point : x, y 위경도 좌표 thumPath : 썸네일 및 레이어팝업 이미지 경로 &quot;nearfaciData&quot;: [ { &quot;pointName&quot;: &quot;구암동 주민센터&quot;, &quot;pointDept&quot;:&quot;생활&quot;, &quot;pointAddr&quot;:&quot;전북 군산시 세풍길 21 구암동주민센터&quot;, &quot;pointText&quot;:&quot;지역민들의 화합의 장, 열린 문화공간, 구암동 주민센터&quot;, &quot;pointDist&quot;:&quot;1.2km&quot;, &quot;point&quot;: { &quot;x&quot;: &quot;126.7440126&quot;, &quot;y&quot;: &quot;35.9858077&quot; }, &quot;thumPath&quot;: &quot;life/01.jpg&quot;, &quot;points&quot;: [], &quot;pointDesc&quot;: &quot;&quot; }]디폴트 현장 데이타 getPlaceInfo.json polygons 데이터를 포함하고 있는 현장 데이터의 center.x 값과 center.y 값이 지도의 중심좌표(center position), 마커 좌표(marker position)을 사용합니다.{ &quot;center&quot;: { &quot;x&quot;: &quot;126.7437278&quot;, &quot;y&quot;: &quot;35.9644004&quot; }, &quot;address&quot;: &quot;전북 군산시 구암동 317-4 일원&quot;, &quot;polygons&quot;: [ { &quot;name&quot;: &quot;현장&quot;, &quot;addr&quot;: &quot;&quot;, &quot;center&quot;: { &quot;x&quot;: &quot;126.7437278&quot;, &quot;y&quot;: &quot;35.9835335&quot; }," }, { "title": "터치 스크롤 라이브러리(스와이퍼)", "url": "/posts/swiper/", "categories": "Library, Tutorial", "tags": "Library, Example, swiper, Tutorial", "date": "2022-07-04 00:00:00 +0900", "snippet": "Swiper API (작성중)소개 웹, 모바일 터치 및 휠 슬라이드구현을 쉽게 해주는 라이브러리. 라이브러리 버전은 4.x 사용 권장. CDN 리소스 JS https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.2.2/js/swiper.js CSShttps://cdnjs.cloudflare.com/ajax/libs/Swiper/4.3.3/css/swiper.min.css프로젝트 소개 https://swiperjs.com/swiper 4.2 API http://web.archive.org/web/20190730163045/http://idangero.us:80/swiper/api/HTML / Javascript&amp;lt;div class=&quot;swiper-container&quot;&amp;gt; &amp;lt;div class=&quot;swiper-wrapper&quot;&amp;gt; &amp;lt;section class=&quot;swiper-slide&quot;&amp;gt;1&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;swiper-slide&quot;&amp;gt;2&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;swiper-slide&quot;&amp;gt;3&amp;lt;/section&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&quot;text/javascript&quot;&amp;gt; let $slide = $(&quot;.swiper-container&quot;); _visualSwiper = new Swiper($slide, { speed : 1000, observer : true, observeParents : true, allowTouchMove: false, direction: &quot;vertical&quot;, mousewheel: { invert: true, forceToAxis:true }, //effect: &#39;fade&#39;, on : { init: function(){ }, slideChangeTransitionStart: function(){ }, slideChangeTransitionEnd: function(){ } }, });&amp;lt;/script&amp;gt;플러그인 사용시 참고사항 슬라이드를 실행할 html dom요소에 swiper-container로 지정하고, 그안에 swiper-wrapper, swiper-slide 를 자식요소로 삽입한다. loop:true 로 슬라이드를 실행할경우 active요소는 추가로 가상의 dom요소 swiper-slide-duplicate 가 함께 삽입되므로,active의 index 지정시 주의하도록 한다. swiper-slide-duplicate - 복제된 슬라이드를 나타냅니다. swiper-slide-duplicate-active - 현재 활성 슬라이드에 복제된 슬라이드를 나타냅니다. swiper-slide-duplicate-next - 활성 옆에 있는 슬라이드에 복제된 슬라이드를 나타냅니다. swiper-slide-duplicate-prev - 활성 이전 슬라이드에 복제된 슬라이드를 나타냅니다.Option Methods (매개변수들) 제공하는 옵션리스트로 네비게이션을 제어 할 수 있는 항목과, 스크롤시 필요한 옵션들의 정의이다.1. Navigation 라이브러리에서 제공하는 옵션항목중 navigation 을 이용하여 슬라이드의 좌, 우 이동 버튼을 간편하게 삽입할 수 있다. 추가로 hideOnClick(boolean), disabledClass(string), hiddenClass(string)로 파생된 옵션도 있지만 잘 사용하지 않는다. &amp;lt;div class=&quot;swiper-button-next&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;swiper-button-prev&quot;&amp;gt;&amp;lt;/div&amp;gt;var mySwiper = new Swiper(&#39;.swiper-container&#39;, { navigation: { nextEl: &#39;.swiper-button-next&#39;, prevEl: &#39;.swiper-button-prev&#39;, },});See the Pen swiper navigation by yoonsc (@yoonsc) on CodePen.2. pagination 쉽게 슬라이드를 이동할수 있는 pager 를 제공한다.var mySwiper = new Swiper(&#39;.swiper-container&#39;, { pagination: { el: &#39;.swiper-pagination&#39;, type: &#39;bullets&#39;, },}); Pagination Parameters clickable(boolean) : true 일 경우 클릭시 슬라이드 이동이 가능하도록 한다. renderBullet (function(index, className)) : index와 className를 전달 받는 함수를 제공한다. var mySwiper = new Swiper(&#39;.swiper-container&#39;, { pagination: { renderBullet: function (index, className) { return &#39;&amp;lt;span class=&quot;&#39; + className + &#39;&quot;&amp;gt;&#39; + (index + 1) + &#39;&amp;lt;/span&amp;gt;&#39;; } },});3. observer swiper 내의 dom요소가 다른 환경의 의해 변형,전환등이 이루어 질 경우 이벤트 에러가 생기는것을 방지시킨다. 예를들어 탭이나 팝업 형태로 swiper를 사용한다면 페이지를 로딩한 직후에는 슬라이더가 노출되지 않고 어떤 동작을 한 이후에 나타나게 된다.즉 처음에 보이지 않는 display: none 상태인 요소에 swiper를 사용하게 되면 에러가 발생하곤 한다. 이 문제를 해결하기 위해서는 observer 매개변수를 사용해야 한다.var mySwiper = new Swiper(&#39;.swiper-container&#39;, { observer: true, //observeParents: true, //Set to true if you also need to watch Mutations for Swiper parent elements //observeSlideChildren: true //Set to true if you also need to watch Mutations for Swiper slide children elements}); 아래는 탭을 사용하여 두개의 swiper를 처리하는 예시이다.See the Pen swiper observer by yoonsc (@yoonsc) on CodePen.콜백함수 화면전환이 실행할때마다 콜백함수를 써서 이벤트나 효과를 적용시킬때 사용한다. 이벤트 리스너 mySwiper.on(event, handler) parameter로 swiper 실행함수 내에 삽입 할 경우 var mySwiper = new Swiper(&#39;.swiper-container&#39;, { // ... on: { init: function () { console.log(&#39;swiper initialized&#39;); }, },}; method로 swiper 실행후 조작하고 싶을때var mySwiper = new Swiper(&#39;.swiper-container&#39;, { // ...};mySwiper.on(&#39;slideChange&#39;, function () { console.log(&#39;slide changed&#39;);});mySwiper.on(&#39;init&#39;, function() { /* do something */ });콜백함수의 이벤트들 init : swiper가 로드된 시점에서 실행하고자 할때 slideChange : 현재 활성 슬라이드가 변경되면 이벤트가 시작됩니다.var mySwiper = new Swiper(&#39;.swiper-container&#39;, { // ... on: { slideChange: function () { var num = this.activeIndex; //현재 활성화된 index var rNum = this.realIndex; //현재 활성화된 index로 loop mode에서 가상의 슬라이드가 복사가 되어 생성되므로 }, },}; slideChangeTransitionStart : 다른 슬라이드(다음 또는 이전)로의 애니메이션 시작 시 이벤트가 발생합니다. slideChangeTransitionEnd : 다른 슬라이드(다음 또는 이전)로의 애니메이션 후 이벤트가 시작됩니다. slideNextTransitionStart: 다음 슬라이드로 (next) 전환시 이벤트를 실행합니다. slidePrevTransitionStart: 이전 슬라이드로 (prev) 전환시 이벤트를 실행합니다. 예시 (배경을 이용하여 시차모션 느낌을 줄 때 사용) ... slideNextTransitionStart: function(){ var activeNum = this.realIndex; var $activeLi = $(&quot;[data-sample-slide=&quot;+activeNum+&quot;]&quot;); TweenMax.from($activeLi.find(&quot;.bg&quot;), 1, {backgroundPositionY: 1000, autoAlpha:0, ease:Power2.easeOut}); }, slidePrevTransitionStart: function(){ var activeNum = this.realIndex; var $activeLi = $(&quot;[data-sample-slide=&quot;+activeNum+&quot;]&quot;); TweenMax.from($activeLi.find(&quot;.bg&quot;), 1, {backgroundPositionY: -1000, autoAlpha:0, ease:Power2.easeOut}); }, ... 페이지 전환 실행함수 함수를 통해 슬라이드를 컨트롤 할때 사용 slideNext : 다음 슬라이드로 이동 mySwiper.slideNext(speed, runCallbacks) slidePrev : 이전 슬라이드로 이동 mySwiper.slidePrev(speed, runCallbacks) slideTo : 특정 슬라이드 index로 이동 mySwiper.slideTo(index, speed, runCallbacks) mySwiper.slideNext();mySwiper.slidePrev();mySwiper.slideTo(6,1000,true);Autoplay Events 함수를 통해 자동재생 컨트롤 할때 사용 autoplay.start : 자동재생 시작 mySwiper.autoplay.start() autoplay.stop : 자동재생 중지 mySwiper.autoplay.stop() mySwiper.autoplay.start();mySwiper.autoplay.stop();Destroy 슬라이드 인스턴스를 초기화하고 모든 이벤트 리스너를 분리합니다. mySwiper.destroy(deleteInstance, cleanStyles); deleteInstance : Swiper 인스턴스를 삭제하지 않으려면 : false , 기본값으로 로 설정하려면 : true. cleanStyles : true 로 설정하면 사용자 정의 스타일이 슬라이드, 래퍼 및 컨테이너에서 제거됩니다. Swiper를 제거하고 새로운 옵션이나 다른 방향으로 다시 초기화해야 하는 경우에 유용합니다. mySwiper.destroy();적용된 사업지 중촌SK 티저메인 거창 포르시엘 본사이트 메인 " }, { "title": "휠스크롤 라이브러리(풀페이지)", "url": "/posts/fullpage/", "categories": "Library, Jquery, Tutorial", "tags": "Library, Jquery, Example, Tutorial", "date": "2022-06-28 00:00:00 +0900", "snippet": "Jquery fullpage.js소개 메인페이지 제작시 마우스휠로 스크롤할때, 페이지 단위로 이동이 쉽게 구현 가능한 플러그인 open소스 라이브러리는 2.x버전 사용권장 CDN 리소스 JS https://cdn.jsdelivr.net/npm/fullpage.js@2.9.7/dist/jquery.fullpage.js CSShttps://cdn.jsdelivr.net/jquery.fullpage/2.9.4/jquery.fullpage.min.cssGithub 오픈소스 https://github.com/aminta/fullPage.js-2.9.6HTML / Javascript&amp;lt;div class=&quot;slide_container&quot; id=&quot;fullpage&quot;&amp;gt; &amp;lt;section class=&quot;section section1&quot;&amp;gt;sec1&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section2&quot;&amp;gt;sec2&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section3&quot;&amp;gt;sec3&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section4&quot;&amp;gt;sec4&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section5&quot;&amp;gt;sec5&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section6 fp-auto-height&quot;&amp;gt; &amp;lt;footer style=&quot;background:#222;&quot;&amp;gt; &amp;lt;div class=&quot;footer_con&quot;&amp;gt; 푸터 &amp;lt;/div&amp;gt; &amp;lt;/footer&amp;gt; &amp;lt;/section&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; $(document).ready(function() { $(&#39;#fullpage&#39;).fullpage({ navigation: true, anchors: [&#39;section1&#39;,&#39;section2&#39;,&#39;section3&#39;,&#39;section4&#39;,&#39;section5&#39;], sectionsColor: [&#39;#ff595e&#39;, &#39;#ffca3a&#39;, &#39;#8ac926&#39;, &#39;#1982c4&#39;, &#39;#6a4c93&#39;], animateAnchor:false, navigationPosition: &#39;right&#39;, scrollingSpeed: 800, navigationTooltips: [&#39;sec1&#39;, &#39;sec2&#39;, &#39;sec3&#39;, &#39;sec4&#39;, &#39;sec5&#39;], showActiveTooltip:true, verticalCentered: true, css3: true, afterLoad: function(anchorLink, index){ } }); });&amp;lt;/script&amp;gt;플러그인 사용시 참고사항 anchors 를 통한 섹션이동시 각각의 섹션에서는 필수 클래스명 section 이 필요함. anchors 의 배열로 정의한 ID가 섹션의 고유 아이디입니다. 화면의 100%로 작업이 되므로, &amp;lt;footer&amp;gt;와 같이 높이값을 다르게 사용 할 경우 section에 class fp-auto-height 를 넣습니다. Option Methods 제공하는 옵션리스트로 네비게이션을 제어 할 수 있는 항목과, 스크롤시 필요한 옵션들의 정의이다. $(&#39;#fullpage&#39;).fullpage({ //Navigation menu: &#39;#menu&#39;, lockAnchors: false, anchors:[&#39;firstPage&#39;, &#39;secondPage&#39;], navigation: false, //페이저 네비게이션 사용여부 navigationPosition: &#39;right&#39;, //페이저 네비게이션의 위치 (left, right), 사용하지 않을경우 none navigationTooltips: [&#39;firstSlide&#39;, &#39;secondSlide&#39;], showActiveTooltip: false, slidesNavigation: false, slidesNavPosition: &#39;bottom&#39;, //Scrolling css3: true, //기본값 true이며, 모던브라우저의 css3 메소드사용 scrollingSpeed: 700, // 섹션 전환 속도 autoScrolling: true, //휠 자동스크롤을 사용하지, 일반 스크롤을 사용할지 여부 fitToSection: true, fitToSectionDelay: 1000, scrollBar: false, //스크롤바를 사용할지 여부를 결정 easing: &#39;easeInOutCubic&#39;, easingcss3: &#39;ease&#39;, loopBottom: false, loopTop: false, loopHorizontal: true, continuousVertical: false, continuousHorizontal: false, //마지막 슬라이드에서 첫번째로, 첫번째 슬라이드에서 맨 마지막으로 이동이 가능여부 scrollHorizontally: false, //마우스 휠 사용하여 수평으로 슬라이드할지 여부를 정의 interlockedSlides: false, dragAndMove: false, //드래그가 필요할시 사용 (true, false, vertical, horizontal, fingersonly: 터치 장치에서만 기능을 활성화, mouseonly: 데스크톱 장치(마우스 및 트랙패드)에 대해서만 활성화) offsetSections: false, //백분율을 기반으로 섹션을 사용하는 방법제공. (예 &amp;lt;div class=&quot;section&quot; data-percentage=&quot;80&quot; data-centered=&quot;true&quot;&amp;gt;) resetSliders: false, fadingEffect: false, //기본 스크롤 효과 대신 페이딩 효과를 사용할지 여부를 정의(true, false, sections, slides) normalScrollElements: &#39;#element1, .element2&#39;, //섹션내에서 자동 스크롤방지 (예: 내부에 지도같은요소에서 휠 스크롤 적용시 사용) scrollOverflow: false, scrollOverflowReset: false, scrollOverflowOptions: null, touchSensitivity: 15, normalScrollElementTouchThreshold: 5, bigSectionsDestination: null, //Design controlArrows: true, verticalCentered: true, sectionsColor : [&#39;#ccc&#39;, &#39;#fff&#39;], //각 섹션의 background 색상을 정의합니다. paddingTop: &#39;0&#39;, //각 섹션의 상단 패딩을 정의합니다. 고정 헤더를 사용할 때 paddingBottom: &#39;0&#39;, //각 섹션의 하단 패딩을 정의합니다. 고정 바닥글 사용할 때 fixedElements: &#39;#header, .footer&#39;, responsiveWidth: 0, responsiveHeight: 0, responsiveSlides: false, parallax: false, parallaxOptions: {type: &#39;reveal&#39;, percentage: 62, property: &#39;translate&#39;}, //Accessibility keyboardScrolling:true // 키보드로 컨트롤 가능여부 animateAnchor: true, recordHistory: true, }); 콜백함수 화면전환이 실행할때마다 콜백함수를 써서 이벤트나 효과를 적용시킬때 사용 콜백함수 리스트 onLeave: function(index, nextIndex, direction){}, afterLoad: function(anchorLink, index){}, afterRender: function(){}, afterResize: function(){}, afterResponsive: function(isResponsive){}, afterSlideLoad: function(anchorLink, index, slideAnchor, slideIndex){}, onSlideLeave: function(anchorLink, index, slideIndex, direction, nextSlideIndex){} afterRender init 개념으로 슬라이드가 실행된후에 이벤트를 발생시킬때 사용한다.&#39;afterRender&#39;: function(){}, afterLoad 해당 페이지화면이 전환되고 나서 실행한다.afterLoad: function(anchorLink, index){}, onLeave 해당 페이지화면이 전환대기 직전 실행한다. Parameters: index, nextIndex, direction(up or down) onLeave: function(index, nextIndex, direction){ var leavingSection = $(this); //after leaving section 2 if(index == 2 &amp;amp;&amp;amp; direction ==&#39;down&#39;){ alert(&quot;Going to section 3!&quot;); } else if(index == 2 &amp;amp;&amp;amp; direction == &#39;up&#39;){ alert(&quot;Going to section 1!&quot;); } }//해당 컨텐츠에 진입후 콜백의 false를 전달받아 스크롤을 취소시킬수 있습니다.onLeave: function(index, nextIndex, direction){ //it won&#39;t scroll if the destination is the 3rd section if(nextIndex == 3){ return false; }}콜백 테스트 샘플 http://nex-api.newapt.kr/test/ 슬라이드에 사용하는 콜백함수 afterSlideLoad 슬라이드 화면이 전환되고 난 후 실행한다.afterSlideLoad: function(anchorLink, index, slideAnchor, slideIndex){ }, onSlideLeave 슬라이드 전환 직전에 이벤트가 발생.onSlideLeave: function(anchorLink, index, slideAnchor, slideIndex){ }, afterResize 브라우저의 사이즈가 커지거나 줄었을때 풀페이지 영역에서 이벤트 실행.afterResize: function(width, height){ },페이지 전환 실행함수 제공되는 메소드 navigation을 사용하지 않고, navi 페이지이동을 시키고 싶을때 사용.$.fn.fullpage.moveTo(section, slide);Destroy 이벤트와 선택적으로 HTML 마크업 및 스타일을 리셋시킵니다. (AJAX를 사용하여 콘텐츠를 로드할 때 사용할때) type: (선택적 매개변수)는 비어 있거나 all. 전달 되면 fullpage.js에서 사용하는 HTML 마크업과 스타일이 제거됩니다. 이렇게 하면 플러그인 수정이 이루어지기 전에 사용된 원래 HTML 마크업이 유지됩니다. //fullPage.js에 의해 생성된 모든 자바스크립트 이벤트 초기화$.fn.fullpage.destroy();//모든 Javascript 이벤트와 원본 HTML 마크업에 대해 fullPage.js가 수행한 모든 수정사항을 초기화합니다.$.fn.fullpage.destroy(&#39;all&#39;);reBuild 새 창 크기 또는 내용에 맞게 DOM 구조를 업데이트합니다. AJAX 호출 또는 사이트 DOM 구조의 외부 변경과 함께 scrollOverflow:true 를 사용하는 것이 좋습니다. $.fn.fullpage.reBuild(); Example&amp;lt;div class=&quot;layout_main&quot;&amp;gt; &amp;lt;button class=&quot;first_btn&quot;&amp;gt;처음으로&amp;lt;/button&amp;gt; &amp;lt;ul class=&quot;navi&quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#section1&quot;&amp;gt;1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#section2&quot;&amp;gt;2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#section3&quot;&amp;gt;3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#section4&quot;&amp;gt;4&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#section5&quot;&amp;gt;5&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;div class=&quot;slide_container&quot; id=&quot;fullpage&quot;&amp;gt; &amp;lt;section class=&quot;section section1&quot;&amp;gt;sec1&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section2&quot;&amp;gt;sec2&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section3&quot;&amp;gt;sec3&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section4&quot;&amp;gt;sec4&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section5&quot;&amp;gt;sec5&amp;lt;/section&amp;gt; &amp;lt;section class=&quot;section section6 fp-auto-height&quot;&amp;gt; &amp;lt;footer style=&quot;background:#222;&quot;&amp;gt; &amp;lt;div class=&quot;footer_con&quot;&amp;gt; 푸터 &amp;lt;/div&amp;gt; &amp;lt;/footer&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;!-- //main_wrap --&amp;gt;&amp;lt;br/&amp;gt;```javascript&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; $(document).ready(function() { $(&#39;#fullpage&#39;).fullpage({ navigation: true, anchors: [&#39;section1&#39;,&#39;section2&#39;,&#39;section3&#39;,&#39;section4&#39;,&#39;section5&#39;], sectionsColor: [&#39;#ff595e&#39;, &#39;#ffca3a&#39;, &#39;#8ac926&#39;, &#39;#1982c4&#39;, &#39;#6a4c93&#39;], animateAnchor:false, navigationPosition: &#39;right&#39;, scrollingSpeed: 800, navigationTooltips: [&#39;sec1&#39;, &#39;sec2&#39;, &#39;sec3&#39;, &#39;sec4&#39;, &#39;sec5&#39;], showActiveTooltip:true, css3: true, afterRender: function(){ //init console.log(&#39;init&#39;); }, afterLoad: function(anchorLink, index){ console.log(&quot;aterload:&quot;+ index); //naviEvent(index); //contentEvent(index); }, onLeave: function(index, nextIndex, direction){ //console.log(index, nextIndex, direction) console.log(&quot;onLeave:&quot;+ index, nextIndex, direction); if(nextIndex == 1) { } else { } } }); function naviEvent(index){ var $this = $(&quot;.navi&amp;gt;li&quot;).eq(index - 1).find(&#39;a&#39;); $(&quot;.navi&amp;gt;li&quot;).not($this).find(&#39;a&#39;).removeClass(&#39;active&#39;); $this.addClass(&#39;active&#39;); }; function contentEvent(index){ var $this = $(&quot;.section&quot;).eq(index - 1); //$(&quot;.section&quot;).not($this).hide(); //$this.stop(false, true).fadeIn(1000); }; //첫번째 슬라이드로 이동시 $(&quot;.first_btn&quot;).on(&quot;click&quot;, function(){ $.fn.fullpage.moveTo(1); }); }); &amp;lt;/script&amp;gt;적용된 사업지 광양라크포엠 티저메인 " }, { "title": "익스플로어 안내 레이어", "url": "/posts/ie/", "categories": "Guide, source", "tags": "Guide, source, html", "date": "2022-05-20 00:00:00 +0900", "snippet": "익스플로어 사용자 업데이트 유도 익스플로어 브라우저 접근시 안내 레이어를 제공한다. 아이콘 리소스는 amazon s3에서 cnd이용. HTML &amp;lt;div id=&quot;browserChk&quot; class=&quot;layerPopup browser_layer&quot;&amp;gt; &amp;lt;div class=&quot;layerPopup_in&quot;&amp;gt; &amp;lt;h3&amp;gt;&amp;lt;strong&amp;gt;브라우저 업데이트 안내&amp;lt;/strong&amp;gt; &amp;lt;span class=&quot;closeLayer&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; class=&quot;btn close_btn_browserchk&quot;&amp;gt; &amp;lt;i class=&quot;lnr lnr-cross&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/h3&amp;gt; &amp;lt;div class=&quot;layer_body&quot;&amp;gt; &amp;lt;div class=&quot;browser_con&quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&quot;https://www.microsoft.com/ko-kr/edge&quot; target=&quot;_blank&quot;&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;img src=&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/browser/icon-edge.png&quot; alt=&quot;&quot;&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;Edge&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&quot;https://www.google.co.kr/chrome/&quot; target=&quot;_blank&quot;&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;img src=&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/browser/icon-chrome.png&quot; alt=&quot;&quot;&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;Chrome&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&quot;https://www.mozilla.org/ko/firefox/new/&quot; target=&quot;_blank&quot;&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;img src=&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/browser/icon-firefox.png&quot; alt=&quot;&quot;&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;Firefox&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&quot;https://support.apple.com/ko-kr/HT204416&quot; target=&quot;_blank&quot;&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;img src=&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/browser/icon-safari.png&quot; alt=&quot;&quot;&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;Safari&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;p class=&quot;con_tit&quot;&amp;gt;평촌 어바인 더샵 웹사이트는 HTML5 기준의 브라우저에 최적화되어 있습니다.&amp;lt;/p&amp;gt; &amp;lt;p class=&quot;con_txt&quot;&amp;gt;Edge, Chrome, Firefox, Safari 브라우저에서는 정상적으로 &amp;lt;br /&amp;gt; 이용이 가능하며, IE(인터넷익스플로어) 브라우저에서는 정상적으로 동작되지 않습니다.&amp;lt;/p&amp;gt; &amp;lt;p class=&quot;con_txt&quot;&amp;gt; &amp;lt;a href=&quot;https://support.microsoft.com/ko-kr/windows/internet-explorer-%EB%8F%84%EC%9B%80%EB%A7%90-23360e49-9cd3-4dda-ba52-705336cc0de2&quot; target=&quot;_blank&quot;&amp;gt;(Internet Explorer는 2022년 6월 15일에 지원이 중단됩니다.)&amp;lt;/a&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;p class=&quot;con_txt&quot;&amp;gt; 위의 아이콘을 클릭하시면 해당 브라우저 설치 화면으로 이동합니다. &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!-- layerPopup_in --&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- //browserChk --&amp;gt;.layerPopup.browser_layer {z-index: 99999;}.browser_layer h3 {text-align: center; font-size:36px; color: #222; padding-bottom: 12px;}.browser_layer .layerPopup_in {padding: 40px 0;}.browser_layer {border-radius: 25px; width: 900px;}.browser_layer .browser_con {padding: 40px 30px 30px;}.browser_layer .browser_con ul {display: table; table-layout: fixed; width: 100%;}.browser_layer .browser_con ul li {display: table-cell; width: 25%; text-align: center;}.browser_layer .browser_con ul li dl {display: inline-block;}.browser_layer .browser_con ul li dl dt {}.browser_layer .browser_con ul li dl dd {padding-top: 10px; color: #000;}.browser_layer p {padding-top: 5px; color: #000; font-size: 14px; text-align: center;}.browser_layer p.con_txt {padding: 10px 0;}.browser_layer p.con_txt a {font-size: 16px; font-weight: 600;}.browser_layer .closeLayer a {color: #000;}.browser_layer .closeLayer {color: #4a525f; font-size: 20px; top: 0; right: 0;} 공통 header나 footer에 javascript 코드를 삽입한다.&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; var agent = navigator.userAgent.toLowerCase(); if ( (navigator.appName == &#39;Netscape&#39; &amp;amp;&amp;amp; navigator.userAgent.search(&#39;Trident&#39;) != -1) || (agent.indexOf(&quot;msie&quot;) != -1) ) { LayerPopups.open(&#39;browserChk&#39;, true); $(&quot;.close_btn_browserchk&quot;).click(function(){ LayerPopups.close(&#39;browserChk&#39;, true); }); } &amp;lt;/script&amp;gt;선행되어야 할 필수 소스들LayerPopup Javascript javascript app.js에 레이어팝업 모듈이 들어가 있는지 확인 LayerPopup Css ui.css에 레이어팝업 스타일코드가 작성 되어 있는지 확인 css" }, { "title": "모바일 퍼블리싱 스타일 가이드", "url": "/posts/mobile/", "categories": "Guide, Mobile", "tags": "Guide, header, html, mobile", "date": "2022-05-03 00:00:00 +0900", "snippet": "모바일 스타일 가이드 색상 변수관리 목적 : Default Layout 및 스킨형태의 스타일을 구성하는 요소들의 색상관리는 variable.css로 관리 및 수정하여 효율을 높인다.import CSS style.css의 import되는 css파일 common.css파일내 페이지 기본 스타일 예시 --body_txt__color:#333; /* html 기본텍스트 */ --active__color:#dfb785; /* hover, active, on등 */@charset &quot;utf-8&quot;;@import url(&quot;reset.css&quot;); //리셋@import url(&quot;font.css&quot;); //폰트@import url(&quot;variable.css&quot;); //색상변수모음@import url(&quot;common.css&quot;); //디폴트 공통html, body { margin: 0; padding: 0; border: none; color: var(--body_txt__color); font-weight: 300; font-style: normal; background: transparent; -webkit-text-size-adjust:none; -webkit-font-smoothing: antialiased; height: 100%; width: 100%; font-size: 1rem; line-height: 1.52857143; font-family: Apple SD Gothic Neo, &#39;Noto Sans KR&#39;, sans-serif;}영역별 색상 설정 설명 모바일가이드레이아웃 --header_bg__color:#fff; /* 상단헤더 bg */ --hamberger__color:#393939; /* 햄버거 라인 */ --tel_bg__color:#381556; /* 전화번호 bg */ . 모바일 가이드 메뉴 영역 --gnb_border__color:#393939; /* gnb 메뉴구분위한 라인 */ --gnb_txt__color:#393939; /* gnb 1depth 메뉴텍스트 */ --gnb_sub__color:#fff; /* gnb 2depth 메뉴텍스트 */ 모바일 가이드 로케이션바 --page_nav_bg_color:#fff; /* 메뉴bg */ --page_nav_line_color:#e7e8e5; /* 메뉴와 컨텐츠 구분 라인 */ --page_nav_home_color:#393939; /* 홈버튼 bg */ --page_nav_tit_color:#393939; /* 1depth 텍스트 */ --page_nav_child_color:#333; /* 2depth 텍스트 */ --page_nav_current_color:#393939; /* 메뉴 오픈시 현재위치 텍스트 */ --page_nav_current_bg_color:#fafbfc; /* 메뉴 오픈시 현재위치 bg */ --page_nav_childbg_color:#fff; /* 2depth bg */ --page_nav_arrow_color:#333; /* 메뉴 아이콘(화살표) */ 모바일 가이드 게시판 --board_line_color:#dcdee2; /* 게시판 리스트 라인 */ --board_label_color:#381556; /* 리스트 매체표시 라벨 */ --board_pager_color:#381556; /* 페이저 라인 및 on텍스트 */ 모바일 가이드 관심고객등록폼 --page_tbl_th_color:#393939; /* 페이지 테이블 제목셀 라인 */ --check_color:#393939; /* 체크박스, 라디오 */ --regist_btn_color:#393939; /* 관심고객버튼 */Variable.css 설명 :root { --body_txt__color:#333; /* html 기본텍스트 */ --active__color:#dfb785; /* hover, active, on등 */ --header_bg__color:#fff; /* 상단헤더 bg */ --hamberger__color:#393939; /* 햄버거 라인 */ --tel_bg__color:#381556; /* 전화번호 bg */ --gnb_bg__color:#dbad6a; /* gnb메뉴bg */ --gnb_border__color:#393939; /* gnb 메뉴구분위한 라인 */ --gnb_txt__color:#393939; /* gnb 1depth 메뉴텍스트 */ --gnb_sub__color:#fff; /* gnb 2depth 메뉴텍스트 */ /* 페이지내 상단 메뉴 */ --page_nav_bg_color:#fff; /* 메뉴bg */ --page_nav_line_color:#e7e8e5; /* 메뉴와 컨텐츠 구분 라인 */ --page_nav_home_color:#393939; /* 홈버튼 bg */ --page_nav_tit_color:#393939; /* 1depth 텍스트 */ --page_nav_child_color:#333; /* 2depth 텍스트 */ --page_nav_current_color:#393939; /* 메뉴 오픈시 현재위치 텍스트 */ --page_nav_current_bg_color:#fafbfc; /* 메뉴 오픈시 현재위치 bg */ --page_nav_childbg_color:#fff; /* 2depth bg */ --page_nav_arrow_color:#333; /* 메뉴 아이콘(화살표) */ /* 관심고객 */ --page_tbl_th_color:#393939; /* 페이지 테이블 제목셀 라인 */ --check_color:#393939; /* 체크박스, 라디오 */ --regist_btn_color:#393939; /* 관심고객버튼 */ /* 게시판 */ --board_line_color:#dcdee2; /* 게시판 리스트 라인 */ --board_label_color:#381556; /* 리스트 매체표시 라벨 */ --board_pager_color:#381556; /* 페이저 라인 및 on텍스트 */}모바일용 스타일시트 소스들font.css font.csscommon.css common.cssstyle.css style.css" }, { "title": "낮/밤 분기처리/타이머", "url": "/posts/%EB%B0%A4%EB%82%AE%EC%8A%A4%ED%83%80%EC%9D%BC/", "categories": "Guide", "tags": "Guide, example", "date": "2022-04-14 00:00:00 +0900", "snippet": "밤/낮 시간 분기 처리 var today = new Date(); 날짜와 var hh = today.getHours(); 현재 시간을 이용하여 class 또는 img 요소를 변경하여 구현한다. //9시부터 18시까지는 오전 //18시부터 오전8시까지는 오후로 처리 if(hh&amp;gt;=9 &amp;amp;&amp;amp; hh&amp;lt;=17){ fname=&quot;am&quot;; } else { fname=&quot;pm&quot;; }스타일 시트(css파일) 변경을 하고자 할 때 스타일 시트(css파일) &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/css/style.css&quot;&amp;gt; 를 분기시키기 위해서는 &amp;lt;head&amp;gt; 영역의 link 태그 src 를 변경하고자 할 때에는 //변수명선언 var link = document.querySelector(&quot;link[rel*=&#39;stylesheet&#39;]&quot;) || document.createElement(&#39;link&#39;); link.rel = &#39;stylesheet&#39;; //rel.속성 stylesheet link.href = &#39;/resources/css/style.css&#39;; //rel.href 속성 &quot;css url 경로&quot; ... //head의 마지막에 &quot;link 변수&quot; 삽입 document.getElementsByTagName(&#39;head&#39;)[0].appendChild(link);&amp;lt;img&amp;gt;요소의 src 속성을 변경하고자 할때 변경하고자 하는 이미지의 클래스명을 지정하여 변수명 선언 for문과 같은 개념의 jquery each 를 통해 모든 이미지요소에서 imagePath 를 찾고, 이미지요소들을 배열로 처리된 리스트의 src 경로를 문자열을 분할하는 메서드 split를 통하여 폴더를 구분화 시킨다. var currentUrl = $this.split(&quot;/&quot;); 폴더명 currentUrl[1] : resources, currentUrl[2] : img, currentUrl[3] : main , currentUrl[4] : sample.jpg 현재 시간을 체크하여 분기된 변수명 fname을 값을 통해 attribute(속성)인 src를 변경한다. $(this).attr(&quot;src&quot;, forder + &quot;/am/&quot; + currentUrl[4]); var imagePath = $(&#39;.imagePath&#39;); imagePath.each(function(){ var $this = $(this).attr(&quot;src&quot;); var currentUrl = $this.split(&quot;/&quot;); var forder = &#39;/&#39; + currentUrl[1]+ &#39;/&#39; + currentUrl[2] + &#39;/&#39; + currentUrl[3]; if (fname === &#39;am&#39;) { $(this).attr(&quot;src&quot;, forder + &quot;/am/&quot; + currentUrl[4]); } else { $(this).attr(&quot;src&quot;, forder + &quot;/pm/&quot; + currentUrl[4]); } });Javascript 전체코드&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; var hourToChange = function() { //var link = document.querySelector(&quot;link[rel*=&#39;stylesheet&#39;]&quot;) || document.createElement(&#39;link&#39;); //link.rel = &#39;stylesheet&#39;; var fname =&quot;&quot;; var today = new Date(); var hh = today.getHours(); var imagePath = $(&#39;.imagePath&#39;); if(hh&amp;gt;=9 &amp;amp;&amp;amp; hh&amp;lt;=17){ fname=&quot;am&quot;; //link.href = &#39;/resources/css/style.css&#39;; } else { fname=&quot;pm&quot;; //link.href = &#39;/resources/css/style.css&#39;; } console.log(fname) $(&quot;body&quot;).addClass(fname) imagePath.each(function(){ var $this = $(this).attr(&quot;src&quot;); var currentUrl = $this.split(&quot;/&quot;); var forder = &#39;/&#39; + currentUrl[1]+ &#39;/&#39; + currentUrl[2] + &#39;/&#39; + currentUrl[3]; if (fname === &#39;am&#39;) { $(this).attr(&quot;src&quot;, forder + &quot;/am/&quot; + currentUrl[4]); } else { $(this).attr(&quot;src&quot;, forder + &quot;/pm/&quot; + currentUrl[4]); } }); //document.getElementsByTagName(&#39;head&#39;)[0].appendChild(link); } &amp;lt;/script&amp;gt;적용된 사업지 thesharp-pyungch.newapt.kr " }, { "title": "당첨자발표 json처리", "url": "/posts/%EB%8B%B9%EC%B2%A8%EC%9E%90%EB%B0%9C%ED%91%9C/", "categories": "Guide, vue", "tags": "Guide, example, vue", "date": "2022-04-11 00:00:00 +0900", "snippet": "소개 이벤트 당첨자리스트를 처리해야 하는 경우가 종종 발생하는데 웹과 모바일, 또 여러개의 이벤트당발을 처리하는데 있어서 업무효율을 높이고자 제작했습니다.당첨자발표 마크업 vue를 통해 json데이타를 가져와서 페이지별 컨텐츠 요소를 노출하기 위하여 아래와 같이 &amp;lt;div id=&quot;winnerVue&quot;&amp;gt; ~ &amp;lt;/div&amp;gt; 를 입력한다.&amp;lt;div id=&quot;winnerVue&quot;&amp;gt; ... //event1의 object list의 name과 phone의 키를 가지고 있는 데이타를 가져옵니다. &amp;lt;ul class=&quot;list_body&quot;&amp;gt; &amp;lt;li class=&quot;user_data&quot; v-for=&quot;(item, i) in list.event1&quot; :key=&quot;i&quot;&amp;gt;&amp;lt;strong&amp;gt;{ { item.name } }&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;{ { item.phone } }&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; ...&amp;lt;/div&amp;gt; 공통 파일 /inc/footer.php 하단 init함수 호출하는곳에 삽입한다.&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; (function (ns) { $(function(){ if($(&quot;.event_winner&quot;).length &amp;gt; 0){ ns.winnerList.init(); } }); })(APP || {}); &amp;lt;/script&amp;gt;Json작성규칙 json파일은 웹, 모바일모두 동일한 오리발을 사용하므로 share폴더에 작성한다. /share/data/getEventResult.json{ &quot;Result&quot;: { &quot;event1&quot;:[ {&quot;name&quot;:&quot;홍*빈&quot;, &quot;phone&quot;:&quot;010-****-0887&quot;}, {&quot;name&quot;:&quot;이*솔&quot;, &quot;phone&quot;:&quot;010-****-7743&quot;}, {&quot;name&quot;:&quot;이*문&quot;, &quot;phone&quot;:&quot;010-****-1015&quot;} ], &quot;event2&quot;:[ {&quot;name&quot;:&quot;홍*빈&quot;, &quot;phone&quot;:&quot;010-****-0887&quot;}, {&quot;name&quot;:&quot;이*솔&quot;, &quot;phone&quot;:&quot;010-****-7743&quot;}, {&quot;name&quot;:&quot;이*문&quot;, &quot;phone&quot;:&quot;010-****-1015&quot;} ] }} Javascript app.js 내 winnerData, winnerList 는 오리발관련 데이타를 불러오고 vue로 노출시키기 위한 함수이다. 탭UI를 이용하여 여러개의 이벤트를 처리하고자 할때에는 updated에 ui실행 함수를 추가한다. // 당첨자발표 데이타로드함수 ns.register( &#39;winnerData&#39; ); ns.winnerData = ( function() { // 당첨자발표 액션함수 ns.register( &#39;winnerList&#39; ); ns.winnerList = ( function() { var _initVue = function() { _vue = new Vue( { el: &#39;#winnerVue&#39;, data: { visibility: false, list:{} }, updated: function() { if( this.visibility ) { //탭으로 여러개의 당발처리하고자 할때 tab관련 함수를 불러온다. ns.ui.tabMenu($(&#39;.ui_tabcontents&amp;gt;.tab&#39;), $(&#39;.tab_conlist&#39;)); } }, } ); };적용된 사업지 isbiz-deogeun2.devnexmedia.com " }, { "title": "공통 오리발 json처리", "url": "/posts/%EC%98%A4%EB%A6%AC%EB%B0%9C/", "categories": "Guide, vue", "tags": "Guide, example, vue", "date": "2022-04-05 00:00:00 +0900", "snippet": "컨텐츠 오리발 마크업 문법 vue를 통해 json데이타를 가져와서 페이지별 컨텐츠 요소를 노출하기 위하여 아래와 같이 &amp;lt;div id=&quot;vue_summary&quot;&amp;gt; ~ &amp;lt;/div&amp;gt; 를 입력한다. 해당 페이지별 json 데이타 호출을 위하여 for문에 대한 obj속성에 .사업안내 를 붙여줍니다. 예시 /pages/overview/overview.php 페이지 &amp;lt;div id=&quot;vue_summary&quot; style=&quot;visibility: hidden;&quot; v-bind:style=&quot;&#39;visibility: visible;&#39;&quot;&amp;gt; &amp;lt;div class=&quot;foot_summary&quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj.사업안내&quot; :key=&quot;i&quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 공통 파일 /inc/footer.php 하단 init함수 호출하는곳에 삽입한다.&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; (function (ns) { $(function(){ ns.summaryList.init(); //오리발관련함수 }); })(APP || {}); &amp;lt;/script&amp;gt;Json작성규칙 json파일은 웹, 모바일모두 동일한 오리발을 사용하므로 share폴더에 작성한다. /share/data/getSummary.json{ &quot;result&quot;: { &quot;사업안내&quot;:[ &quot;※ 상기 개요는 인허가 과정에서 변경될 수 있습니다.&quot;, &quot;※ 본 사이트의 개발 및 계획에 대한 사항은 각 개발주체 및 관계기관의 사정에 따라 변경될 수 있습니다.&quot; ], }}Javascript app.js 내 summaryData, summaryList 는 오리발관련 데이타를 불러오고 vue로 노출시키기 위한 함수이다. // 오리발데이터 로드 ns.register( &#39;summaryData&#39; ); } )(); // 오리발 vue action ns.register( &#39;summaryList&#39; ); ns.summaryList = ( function() { var _initVue = function() { _vue = new Vue( { el: &#39;#vue_summary&#39;, data: { obj:{}, }, } ); }; } )(); 적용된 사업지 https://isbiz-deogeun.devnexmedia.com/officetel/" }, { "title": "vue를 이용한 퍼블리싱 html 가이드", "url": "/posts/header/", "categories": "Guide, Header", "tags": "Guide, header, html, vue", "date": "2021-12-29 00:00:00 +0900", "snippet": "Header 마크업 문법 vue를 통해 html dom요소를 제어하기 위해서는 id=&quot;vue_container&quot; 로 감싸줍니다. vr컨텐츠가 id=&quot;vue_container&quot; 로 감싸져 있을 경우 로드가 되지 않으니 꼭 컨텐츠 영역을 감싸지 않도록 주의해주세요. (아래의 예시 참고)&amp;lt;div id=&quot;vue_container&quot; style=&quot;visibility: hidden;&quot; v-bind:style=&quot;&#39;visibility: visible;&#39;&quot;&amp;gt; &amp;lt;header&amp;gt; ... &amp;lt;/header&amp;gt; &amp;lt;div id=&quot;page_location&quot;&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;sub_title_area&quot;&amp;gt;...&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- //vue_container --&amp;gt;&amp;lt;!-- 컨텐츠 시작 --&amp;gt;&amp;lt;section id=&quot;container&quot; class=&quot;page_contents&quot;&amp;gt; ...&amp;lt;/section&amp;gt;header내의 h1 Element 메인페이지와 서브페이지가 다른 이미지요소를 노출할경우에는 아래와 같이 조건문 v-if 디렉티브를 사용하였으며, 표현식 값의 참-거짓(Boolean타입)에 따라 엘리먼트를 조건부로 렌더링 합니다. v-if=&quot;localNum1 == undefined&quot; : localNum1 == undefined일 경우는 index페이지를 의미함 v-bind:alt=&quot;prjName&quot; alt에 프로젝트명을 데이터 바인딩하여 가져옵니다. &amp;lt;h1&amp;gt; &amp;lt;a href=&quot;/&quot;&amp;gt; &amp;lt;img src=&quot;/resources/img/top_logo_main.png&quot; v-if=&quot;localNum1 == undefined&quot; v-bind:alt=&quot;prjName&quot;&amp;gt; &amp;lt;img src=&quot;/resources/img/top_logo_sub.png&quot; v-else v-bind:alt=&quot;prjName&quot;&amp;gt; &amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;header내의 GNB Element 본가이드 페이지에서는 MD파일내 더블 중괄호 가 출력이 되지않아서 띄어쓰기함.({ { } })Depth1 설명 &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt; v-for 반복문을 사용하여 gnbList 데이터 1depth 요소들을 바인딩함. (참고: item-&amp;gt; 배열내 각element요소 , i 는 index,obj는 배열 object, key는 고유값) { { item.krName } } 는 1depth 메뉴명(국문)의 데이터를 출력함. v-bind:data-href=&quot;item.url&quot; 는 메뉴명의 url을 가져온다. v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot; / 클릭시 이벤트 처리 (v-on:click 또는 약어 @click)params == item.url : url, item.open : 준비중여부(true/false), item.isBlank : 새창인경우 (true/false) :class=&quot;{ current : localNum1 == i }&quot; 페이지 넘버링과 일치하는 요소의 클래스 스타일은 &quot;current&quot; Depth2 설명 &amp;lt;li v-for=&quot;(subItem, j) in item.subDepth&quot; :key=&quot;j&quot;&amp;gt; v-for 반복문을 사용하여 1depth내의 2depth 요소들을 바인딩함. { { subItem.krName } } 는 2depth 메뉴명(국문)의 데이터를 출력함. v-bind:data-href=&quot;subItem.url&quot; 는 메뉴명의 url을 가져온다. v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; / 클릭시 이벤트 처리 (1depth와동일) :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot; isCurrunt는 pathname과 메뉴요소의 url과 일치할경우 &quot;current&quot;, isRemote는 메뉴에 포함되어있지 않은 url과 일치할경우 클래스명 &quot;recurrent&quot; &amp;lt;!-- depth 1 --&amp;gt;&amp;lt;nav class=&quot;gnb&quot;&amp;gt; &amp;lt;ul class=&quot;gnb_depth_1&quot;&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;item.url&quot; v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot; :class=&quot;{ current : localNum1 == i }&quot;&amp;gt;{ { item.krName } } &amp;lt;/a&amp;gt; &amp;lt;!-- depth 2 --&amp;gt; &amp;lt;ul class=&quot;gnb_depth_2&quot;&amp;gt; &amp;lt;li v-for=&quot;(subItem, j) in item.subDepth&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;subItem.url&quot; v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot;&amp;gt; { { subItem.krName } } &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt;&amp;lt;/nav&amp;gt;gnbList 메뉴 데이타 설명 krName : 메뉴명. url : url경로. open : true / false (준비중일경우 : false). isBlank: true, (새창링크일경우 : true) / option 항목. subDepth : 2depth가 있을경우 리스트작성. remoteUrl: location.pathname 과 메뉴 url이 일치하지 않을경우 등록하고자 하는 url을 배열리스트로 나열. getMenu_teaser.json{ &quot;prjName&quot;: &quot;사업지명&quot;, &quot;s3URL&quot;:&quot;https://bucket-apt.s3.ap-northeast-2.amazonaws.com/thesharp/terrace/web/&quot;, &quot;testURL&quot;:&quot;테스트주소.newapt.kr&quot;, &quot;realURL&quot;:&quot;실서버주소.co.kr&quot;, &quot;phoneNum&quot;: &quot;전화번호&quot;, &quot;gnbList&quot;: [ {&quot;krName&quot;: &quot;사업안내&quot;, &quot;url&quot;: &quot;/pages/overview/overview.php&quot;, &quot;open&quot;:true, &quot;subDepth&quot;: [ {&quot;krName&quot;: &quot;사업개요&quot;, &quot;url&quot;: &quot;/pages/overview/overview.php&quot;, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;브랜드소개&quot;, &quot;url&quot;: &quot;/pages/overview/brand.php&quot;, &quot;open&quot;:true} ] }, {&quot;krName&quot;: &quot;프리미엄&quot;, &quot;url&quot;: &quot;/pages/overview/premium.php&quot;, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;외부링크일경우&quot;, &quot;url&quot;: &quot;/pages/board/news_list.php&quot;, &quot;isBlank&quot;:true, &quot;open&quot;:true}, {&quot;krName&quot;: &quot;이벤트&quot;, &quot;url&quot;: &quot;/pages/board/event.php&quot;, &quot;open&quot;:true, &quot;remoteUrl&quot;: [&quot;/pages/board/event_view.html&quot;, &quot;/pages/board/event_view2.html&quot;] }, {&quot;krName&quot;: &quot;+ 관심고객등록&quot;, &quot;url&quot;: &quot;/regist/regist.php&quot;, &quot;open&quot;:true} ]} Json 데이타 로드함수 //app.js ns.register( &#39;GnbListData&#39; ); ns.GnbListData = ( function() { var _isLocal = true; var _isLoading = false; var _localUrl = &#39;/resources/data/getMenu_teaser.json&#39;; var _serverUrl = &#39;&#39;; var _url = _isLocal ? _localUrl : _serverUrl; var load = function( cb ) { if( _isLoading ) return; .... ... . }; return { isLoading: function() { return _isLoading; }, load: load } } )(); Vue 메뉴 컨트롤 함수 //app.js ns.register( &#39;GnbList&#39; ); ns.GnbList = ( function() { var _isInitialized; var _vue; var Data = ns.GnbListData; var pathName = location.pathname; var init = function() { if( _isInitialized ) return; _isInitialized = true; _initVue(); _load(); }; var _load = function() { Data.load(function( data ) { _vue.visibility = true; _vue.obj = data.gnbList; _vue.prjName = data.prjName; _vue.phoneNum = data.phoneNum; _initpageNumber(); _pageLocation(); } ); }; var getParam = function() { ... }; //페이지넘버링 var _initpageNumber = function() { _vue.obj.forEach((item, i) =&amp;gt; { ... }); }; //페이지 로케이션 데이타컨트롤 var _pageLocation = function(){ ... }; var _initVue = function() { _vue = new Vue( { el: &#39;#vue_container&#39;, data: { prjName:&quot;&quot;, //프로젝트명 phoneNum:&quot;&quot;, //전화번호노출 obj: [{}], //gnb 데이타 localNum1:undefined, // 대메뉴 페이지 넘버링 localNum2:undefined, // 소메뉴 페이지 넘버링 firstDeptItem:[], //대메뉴 리스트 secondDetpItem:[], //소메뉴 리스트 firstDeptTitle:&quot;&quot;, //대메뉴명 secondDeptTitle:&quot;&quot; //소메뉴명 }, methods: { ... }, updated: function() { if( this.visibility ) { _UiGnb(); //2depth메뉴가 있는 경우 풀다운메뉴 _UiLocation(); //페이지 로케이션이 있을 경우 } } } ); }; //gnb ui var _UiGnb = function () { ... }; //page location ui var _UiLocation = function () { ... }; return { init: init, getParam: getParam } } )();현재페이지를 클래스 바인딩한 스타일정의 current, recurrentheader .header_con .gnb_depth_1&amp;gt;li&amp;gt;a.current,header .header_con .gnb_depth_1&amp;gt;li&amp;gt;a.recurrent { color:#dfb785;}header .header_con .gnb_depth_2 li a.current, header .header_con .gnb_depth_2 li a.recurrent { color: #dfb785;}서브페이지 공통 마크업상단 비쥬얼 영역&amp;lt;div class=&quot;layout_sub&quot;&amp;gt; &amp;lt;section class=&quot;top_visual&quot;&amp;gt; &amp;lt;p class=&quot;sub_top_tit&quot;&amp;gt;{ { secondDeptTitle } }&amp;lt;/p&amp;gt; &amp;lt;span class=&quot;sub_top_bg&quot; v-bind:id=&quot;&#39;bgVisual_&#39; + localNum1&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/section&amp;gt; 1depth의 메뉴명을 출력하고 싶을 경우 { { firstDeptTitle } } 2depth의 메뉴명을 출력하고 싶을 경우 { { secondDeptTitle } } 카테고리별 비쥬얼 이미지를 가져오고 싶을때 예시 &amp;lt;span class=&quot;sub_top_bg&quot; v-bind:id=&quot;&#39;bgVisual_&#39; + localNum1&quot;&amp;gt;&amp;lt;/span&amp;gt; 상단 로케이션 영역&amp;lt;div id=&quot;page_location&quot; class=&quot;page_location_nav&quot;&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;span class=&quot;home&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;&amp;lt;i class=&quot;lnr lnr-home&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;dl class=&quot;path-item path_depth_1&quot;&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;span&amp;gt;{ { firstDeptTitle } }&amp;lt;/span&amp;gt;&amp;lt;button type=&quot;button&quot; class=&quot;btn-open&quot;&amp;gt;열기&amp;lt;/button&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(item, i) in obj&quot; :key=&quot;i&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;item.url&quot; v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot; :class=&quot;{ current : localNum1 == i }&quot;&amp;gt; { { item.krName } }&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;btn-close&quot;&amp;gt;닫기&amp;lt;/button&amp;gt;&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;dl class=&quot;path-item path_depth_2&quot; v-if=&quot;localNum2 != undefined&quot;&amp;gt; &amp;lt;dt&amp;gt;&amp;lt;span&amp;gt;{ { secondDeptTitle } }&amp;lt;/span&amp;gt;&amp;lt;button type=&quot;button&quot; class=&quot;btn-open&quot;&amp;gt;열기&amp;lt;/button&amp;gt;&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li v-for=&quot;(subItem, j) in secondDetpItem&quot; :key=&quot;j&quot;&amp;gt; &amp;lt;a href=&quot;javascript:;&quot; v-bind:data-href=&quot;subItem.url&quot; v-on:click.prevent=&quot;menuClick(subItem.url, subItem.open, subItem.isBlank)&quot; :class=&quot;[ isCurrunt(subItem) ? &#39;current&#39; : &#39;&#39;, isRemote(subItem) ? &#39;recurrent&#39; : &#39;&#39; ]&quot;&amp;gt; { { subItem.krName } }&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;btn-close&quot;&amp;gt;닫기&amp;lt;/button&amp;gt;&amp;lt;/dd&amp;gt; &amp;lt;/dl&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/div&amp;gt; 반복문과 내부 element는 gnb와 동일한 형태의 마크업으로 들어갑니다. 디자인에 따라 대메뉴와{ { firstDeptTitle } } 소메뉴 { { secondDeptTitle } } 를 적절하게 이용하면 됩니다. " }, { "title": "Session 기반 인증과 Token 기반 인증", "url": "/posts/token/", "categories": "Skill, frontend", "tags": "Skill, frontend, session, token, backend", "date": "2021-01-21 00:00:00 +0900", "snippet": "Session 기반 인증과 Token 기반 인증웹 서버는 Stateless 프로토콜인 HTTP 를 사용하기 때문에 웹사이트에서 인증을 관리하기 위한 방안이 필요하다.로그인을 한 유저들에 대해 권한이 필요한 매 요청마다 재로그인을 시킬수는 없는 일이다.그렇기 때문에 웹사이트는 일반적으로 유저의 접속 정보를 관리하기 위한 몇가지 방안을 사용한다.1. Session 기반 인증세션 기반인증을 위해 Session 과 Cookie 가 사용된다. Flow 는 다음과 같다. 유저가 로그인을 하고 세션이 서버 메모리 상에 저장된다. 이 때 세션을 식별하기 위한 Session Id 를 기준으로 정보를 저장한다. 브라우저에 쿠키로 Session Id 가 저장된다. 쿠키에 정보가 담겨있기 때문에 브라우저는 해당 사이트에 대한 모든 Request 에 Session Id 를 쿠키에 담아 전송한다. 서버는 클라이언트가 보낸 Session Id 와 서버 메모리로 관리하고 있는 Session Id 를 비교하여 Verification 을 수행한다. Session 기반 인증은 다음과 같은 장단점을 갖는다. 세션 기반 인증 방식은 구현이 상당히 명확하다는 장점이 있다. 또한 실제 서버에서 로그인 상태 확인이 굉장히 유용하다. 상대적으로 안전하다. 서버측에서 관리하기 때문에 클라이언트 변조에 영향받거나 데이터의 Stale (손상) 우려가 없다. 유저들의 세션에 대한 정보를 서버 메모리에 들고 있게 된다는 부담이 있다. 서버 메모리에 세션 정보가 저장되기 때문에 Scale Out / Scale In 이 부담이 될 수 있으며, 결국에는 유저 상태에 무관하게 동작할 수 있도록 Data-Driven 아키텍처가 요구된다. 멀티 디바이스 환경에서 로그인 시 신경써줘야할 부분들이 생긴다.2. Token 기반 인증Token 기반 인증의 방법으로 많은 웹 서버들은 JWT(JSON Web Token) 을 사용한다.Token 기반 인증 방식과 Session 기반 인증 방식의 가장 큰 차이점은 유저의 정보가 서버에 저장되지 않는다는 점이다. Flow 는 다음과 같다. 유저가 로그인을 하고 서버에 세션을 이용해서 정보를 기록하는대신, Token 을 발급한다. 클라이언트는 발급된 Token 을 저장한다 (일반적으로 local storage 에 저장한다.) 클라이언트는 요청 시 저장된 Token 을 Header 에 포함시켜 보낸다. 서버는 매 요청시 클라이언트로부터 전달받은 Header 의 Token 정보를 Verification 한 뒤, 해당 유저에 권한을 인가한다.Flow 에서 차이를 확인할 수 있듯, Session 기반 서버가 서버측에 정보를 기록하는 반면, Token 기반 인증은 Token 에 대한 Verification 만 수행할 뿐 저장은 클라이언트에서 수행한다. Token 기반 인증은 다음과 같은 장단점을 갖는다. 클라이언트에 저장되기 때문에 서버의 메모리에 부담이 되지않으며 Scale 에 있어 대비책을 고려할 필요가 없다 멀티 디바이스 환경에 대한 부담이 없다. 상대적으로 Stale (손상) 의 위험이 크다. 결국 구현을 하다보면 서버측에 token blacklist 를 관리하게 될 가능성이 있고 그렇게 되면 서버측 메모리의 소모가 발생하게 된다. Token 은 일반적으로 Session ID 보다 길다. XSS 공격에 취약할 수 있어 가능한 민감한 정보는 포함시키지 않을 필요가 있다. 최근에는 Scaling 이슈와 멀티 디바이스 이슈로 Token 방식이 좀 더 핫한 느낌이지만, Session 방식도 여전히 많이 쓰인다.두 방식 모두 장단점이 있기 때문에 적합한 구조를 선택하는 것이 좋겠다." }, { "title": "vue 디렉티브 처리예시", "url": "/posts/vue_ex/", "categories": "Guide, example", "tags": "Guide, example, vue", "date": "2021-01-05 00:00:00 +0900", "snippet": "데이터 바인딩시 디렉티브 사용예시 문자열 데이터 바인딩의 가장 기본 형태는 이중 중괄호을 사용한 텍스트 보간입니다.&amp;lt;div&amp;gt;{ { item } }&amp;lt;/div&amp;gt; html(text기반)의 멀티라인의 내용을 data에서 가져와야 할 경우 (개행(&amp;lt;br&amp;gt;포함)) 이중 중괄호(mustaches)는 HTML이 아닌 일반 텍스트로 데이터를 해석합니다. 실제 HTML을 출력하려면 v-html 디렉티브를 사용해야 합니다.&amp;lt;div v-html=&quot;item.goodsDetail&quot;&amp;gt;&amp;lt;/div&amp;gt; HTML 마크업속성 style data 바인딩 예시 v-bind:style=&quot;{ }&quot;&amp;lt;div v-if=&quot;item != undefined&quot; v-bind:style=&quot;{ backgroundImage: &#39;url(&#39; + item.goodsImg + &#39;)&#39; }&quot;&amp;gt;&amp;lt;/div&amp;gt; img속성 data 바인딩 예시 img:src=&quot;itemImg&quot; &amp;lt;img :src=&quot;itemImg&quot; alt=&quot;itemName&quot;&amp;gt; href속성을 이용하여 바인딩할경우 v-bind:href=&quot;item.url&quot;&amp;lt;a href=&quot;item.url&quot;&amp;gt;&amp;lt;/a&amp;gt; data속성을 이용하여 바인딩할경우 v-bind:data-index=&quot;num&quot;&amp;lt;div v-bind:data-index=&quot;num&quot;&amp;gt;&amp;lt;/div&amp;gt; Computed (계산된 속성으로 처리할 경우) v-bind:class=&quot;isSeleted&quot; state의 select가 true일 경우 active가 출력됨.data: { select:true,}...computed: { isSeleted:function(){ return { active: this.select } },}, filters (텍스트를 형식화 시키는 예시) Vue는 텍스트 형식화를 적용할 수 있는 필터를 지원합니다. 이 필터들은 중괄호 보간법 혹은 v-bind표현법 을 이용하여 사용합니다. 1번은 중괄호 보간법으로 금액(3자리 콤마찍기)으로 표현하고자 할때 사용한 예시입니다. 2번은 v-bind로 id의 첫번째 글자를 대문자로 표현하는 예시입니다. 중괄호 보간법 (1번예시)&amp;lt;span class=&quot;price_total&quot;&amp;gt;{ { total | numberComma } }&amp;lt;/span&amp;gt;&amp;lt;!-- 결과값 : 17,000,000&amp;gt;data:{ total:17000000},filters:{ numberComma:function(value){ var num = new Number(value); return num.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, &quot;,&quot;); }},computed: { v-bind 표현 (2번예시)&amp;lt;div v-bind:id=&quot;nowId | formatId&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- 결과값 : id=&quot;Nexmedia&quot;&amp;gt;data:{ nowId:&quot;nexmedia&quot;},filters: { formatId: function (value) { if (!value) return &#39;&#39; value = value.toString() return value.charAt(0).toUpperCase() + value.slice(1) }} Methods (이벤트 핸들링 예시) v-on:click 또는 @click 디렉티브를 사용하여 이벤트를 호출하면 트리거될때 javascript를 실행합니다. v-on:click.prevent 의 prevent는 event.preventDefault() 를 의미합니다. v-on 이벤트 수식어리스트(.접미사) .stop .prevent .capture .self .once .passive &amp;lt;a href=&quot;#&quot; v-on:click=&quot;showName&quot;&amp;gt; { { name } } &amp;lt;/a&amp;gt; &amp;lt;!-- 결과값 Hello Vue.js ! --&amp;gt;&amp;lt;a v-on:click.prevent=&quot;menuClick(item.url, item.open, item.isBlank)&quot;&amp;gt; { { item.krName } } &amp;lt;/a&amp;gt;data: { name: &#39;Vue.js&#39;},methods: { showName: function(event) { // 메소드 안에서 사용하는 `this` 는 Vue 인스턴스를 가리킵니다 alert(&#39;Hello &#39; + this.name + &#39;!&#39;) }, menuClick: function(url, open, blank) { //data의 인자를 전달하여 실행하는 예시. if(open) { blank == true ? window.open(url) : location.href = url; } else { alert(&quot;준비중입니다.&quot;); } },}" } ]
